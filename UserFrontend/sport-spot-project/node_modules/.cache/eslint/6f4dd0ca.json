[{"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\main.js":"1","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\vuex\\store.js":"2","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\App.vue":"3","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\NewRegistation.vue":"4","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\MainPage.vue":"5","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\RoomsPage.vue":"6","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\NavBar.vue":"7","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CamerasPage.vue":"8","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CalendarPage.vue":"9"},{"size":279,"mtime":1688839752766,"results":"10","hashOfConfig":"11"},{"size":2066,"mtime":1690218326987,"results":"12","hashOfConfig":"11"},{"size":1463,"mtime":1688839752764,"results":"13","hashOfConfig":"11"},{"size":4509,"mtime":1688839752766,"results":"14","hashOfConfig":"11"},{"size":996,"mtime":1688839752765,"results":"15","hashOfConfig":"11"},{"size":6748,"mtime":1690218350001,"results":"16","hashOfConfig":"11"},{"size":1784,"mtime":1688839752765,"results":"17","hashOfConfig":"11"},{"size":8244,"mtime":1690216633435,"results":"18","hashOfConfig":"11"},{"size":161,"mtime":1688839752764,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a7eoz7",{"filePath":"22","messages":"23","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\main.js",[],"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\vuex\\store.js",["40"],"// import { createApp } from 'vue'\r\nimport { createStore } from 'vuex'\r\nimport {getComponentEmitsFromOptions} from \"eslint-plugin-vue/lib/utils\";\r\n// import axios from \"axios\";\r\n\r\nexport default createStore({\r\n    state () {\r\n        return {\r\n            cameraCount: 0,\r\n            roomCount: 0,\r\n            cameras: [],\r\n            rooms: [],\r\n            sectors: ['ПОЛ', 'ЗЕРКАЛО']\r\n        }\r\n    },\r\n    mutations: {\r\n        setCameras (state, camera) {\r\n            state.cameras.push(camera)\r\n        },\r\n        setRooms (state, room) {\r\n            state.rooms.push(room)\r\n        },\r\n        // setCameraCount (state, cameraCount) {\r\n        //     state.cameraCount = cameraCount\r\n        // },\r\n        // setRoomCount (state, roomCount) {\r\n        //     state.roomCount = roomCount\r\n        // }\r\n    },\r\n    actions: {\r\n        addCamera({commit}, newCamera) {\r\n            commit('setCameras', newCamera)\r\n        },\r\n        addRoom({commit}, newRoom) {\r\n            commit('setRooms', newRoom)\r\n        },\r\n        // addCameraCount({commit}, cameraCount) {\r\n        //     commit('setCameraCount', cameraCount)\r\n        // },\r\n        // addRoomCount({commit}, roomCount) {\r\n        //     commit('setRoomCount', roomCount)\r\n        // }\r\n    },\r\n    getters: {\r\n        getCameras(state) {\r\n            return state.cameras\r\n        },\r\n        getCameraByID: (state) => (id) => {\r\n            return state.cameras.find(camera => camera.id === id)\r\n        },\r\n        getCamerasByRoomID: (state) => (id) => {\r\n          return state.cameras.filter(camera => camera.roomID === id)\r\n        },\r\n        getRooms(state) {\r\n            return state.rooms\r\n        },\r\n        getRoomByID: (state) => (id) => {\r\n            return state.rooms.find(room => room.id === id)\r\n        },\r\n        getSectors(state) {\r\n            return state.sectors\r\n        },\r\n        getCameraCount(state) {\r\n            return state.cameraCount\r\n        },\r\n        getRoomCount(state) {\r\n            return state.roomCount\r\n        }\r\n    }\r\n})\r\n\r\n","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\App.vue",[],"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\NewRegistation.vue",[],"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\MainPage.vue",[],"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\RoomsPage.vue",["41"],"<template>\r\n  <div>\r\n    <div class=\"container\" >\r\n      <div class=\"row justify-content-around\">\r\n        <div class=\"col-3\">\r\n          <div class=\"row\">\r\n            <label class=\"field\">Помещения</label>\r\n            <button id=\"add\" style=\"margin-top: 5px\" @click=\"resetRoom\">Добавить</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <label class=\"field\">Добавить</label>\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <label class=\"field\">Просмотр</label>\r\n        </div>\r\n        <div class=\"col-3\" >\r\n          <div class=\"row window camera col-12\" @click=\"chooseRoom(room)\" v-for=\"(room, index) in getRooms\"\r\n               :key=\"index\">\r\n            <span class=\"room-name\">{{room.name}}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-4 window\">\r\n          <label style=\"font-weight: 700; margin-top: 10px\">Помещение</label>\r\n          <form @submit.prevent=\"save\" style=\"margin-top: 10px\">\r\n            <div class=\"\">\r\n              <label> Название: </label>\r\n              <input class=\" input-field\" type=\"text\" v-model.trim=\"room.name\"\r\n                     :class=\"v$.room.name.$error ? 'is-invalid' : ''\" >\r\n              <p v-if=\"v$.room.name.$dirty && v$.room.name.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> Класс помещения: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"room.class\"\r\n                     :class=\"v$.room.class.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.room.class.$dirty && v$.room.class.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\" >\r\n              <button type=\"submit\" class=\"btn btn-primary\" >Сохранить</button>\r\n            </div>\r\n          </form>\r\n          <label style=\"font-weight: 700\">Сектора</label>\r\n          <div class=\"row\" v-if=\"roomSelected\">\r\n            <div class=\"col-6\">\r\n              <label>Назначенные</label>\r\n              <table class=\"window\">\r\n                <tr  v-for=\"(camera, index) in getCamerasByRoomID(room.id)\" :key=\"index\">\r\n                  <td style=\"width: 200px\" @click=\"addCameraToRoom(camera)\"><span style=\"margin-left: 5px\">{{ camera.name }}</span></td>\r\n                </tr>\r\n<!--                <tr><td style=\"width: 200px\"><span style=\"margin-left: 5px\">Камера 1</span></td></tr>-->\r\n<!--                <tr><td style=\"width: 200px\"><span style=\"margin-left: 5px\">Камера 2</span></td></tr>-->\r\n<!--                <tr><td style=\"width: 200px\"><span style=\"margin-left: 5px\">Камера 3</span></td></tr>-->\r\n<!--                <tr><td style=\"width: 200px\"><span style=\"margin-left: 5px\">Камера 4</span></td></tr>-->\r\n              </table>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <label>Существующие</label>\r\n              <table class=\"window\" >\r\n                <tr  v-for=\"(camera, index) in getCameras\" :key=\"index\">\r\n                  <td style=\"width: 200px\"><span style=\"margin-left: 5px\">{{ camera.name }}</span></td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <p v-else style=\"font-size: 15px\">Выберите помещение для отображение секторов</p>\r\n          <br>\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <div class=\"col-12 window\">\r\n            <p>Изображение</p>\r\n            <p>Информация сектора</p>\r\n            <p>Сектор</p>\r\n            <span>Техническая информация:</span>\r\n            <ul>\r\n              <li>Границы:</li>\r\n              <li>Высота от пола:</li>\r\n              <li>Тип сектора: <span v-if=\"roomSelected\"></span></li>\r\n            </ul>\r\n            <p>Справка:</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex'\r\nimport {mapActions} from 'vuex'\r\nimport {mapMutations} from 'vuex'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required} from '@vuelidate/validators'\r\n\r\nexport default {\r\n  name: \"RoomsPage\",\r\n  setup () {\r\n    return {\r\n      v$: useVuelidate()\r\n    }\r\n  },\r\n  data(){\r\n    return {\r\n      room: {\r\n        id: -1,\r\n        camID: [],\r\n        name: '',\r\n        class: ''\r\n      },\r\n      count: 0,\r\n      roomSelected: false\r\n    }\r\n  },\r\n  validations: {\r\n    room: {\r\n      name: {required},\r\n      class: {required}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n        'getRooms',\r\n        'getRoomByID',\r\n        'getCameras',\r\n        'getCamerasByRoomID',\r\n        'getRoomCount'\r\n    ]),\r\n  },\r\n  methods: {\r\n    save() {\r\n      this.v$.room.$touch()\r\n      if (!this.v$.room.$error) {\r\n        console.log('Валидация прошла успешно')\r\n        this.room.id = this.getRoomCount\r\n        // let roomCount = this.getRoomCount + 1\r\n        // this.addRoomCount(roomCount)\r\n        console.log(this.getRoomCount)\r\n        let roomCopy = Object.assign({}, this.room)\r\n        this.addRoom(roomCopy)\r\n        this.v$.room.$reset()\r\n      }\r\n      else console.log('Валидация не прошла')\r\n    },\r\n    chooseRoom(room) {\r\n      console.log(room.id)\r\n      this.room = this.getRoomByID(room.id)\r\n      this.roomSelected = true\r\n    },\r\n    resetRoom(){\r\n      let roomCopy = Object.assign({}, this.room)\r\n      this.room = roomCopy\r\n      this.room.name = ''\r\n      this.room.class = ''\r\n    },\r\n    addCameraToRoom(camera){\r\n      camera.roomID = this.room.id\r\n    },\r\n    ...mapActions([\r\n        'addRoom',\r\n        // 'addRoomCount'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#add{\r\n  width: 110px;\r\n  /*height: 35px;*/\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  margin-right: 30px;\r\n  border-radius: 10px;\r\n  font-size: 18px;\r\n}\r\n.window{\r\n  box-shadow: 0 3px 4px rgba(0,0,0,.25);\r\n  border-radius: 10px ;\r\n}\r\n.camera:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\ntd:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\n.field {\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n}\r\n.room-name{\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin: 7px;\r\n}\r\n.input-field{\r\n  outline: none;\r\n  width: 200px;\r\n  height: 25px;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 15px;\r\n  border-radius: 5px ;\r\n  border: 1px solid grey;\r\n}\r\ntr:nth-child(even) {\r\n  background: #dfe0ff;\r\n}\r\n\r\n</style>","D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\NavBar.vue",[],"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CamerasPage.vue",[],"D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CalendarPage.vue",[],{"ruleId":"42","severity":2,"message":"43","line":3,"column":9,"nodeType":"44","messageId":"45","endLine":3,"endColumn":37},{"ruleId":"42","severity":2,"message":"46","line":96,"column":9,"nodeType":"44","messageId":"45","endLine":96,"endColumn":21},"no-unused-vars","'getComponentEmitsFromOptions' is defined but never used.","Identifier","unusedVar","'mapMutations' is defined but never used."]