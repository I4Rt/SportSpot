{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e4fe0dc6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-around\"\n};\nconst _hoisted_3 = {\n  class: \"col-3\"\n};\nconst _hoisted_4 = {\n  class: \"row\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field\"\n}, \"Камеры\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-4\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field\"\n}, \"Настройка\")], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-5\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field\"\n}, \"Просмотр\")], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"col-3\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"cam-name\"\n};\nconst _hoisted_11 = {\n  class: \"cam-ip\"\n};\nconst _hoisted_12 = {\n  class: \"col-4 window\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  style: {\n    \"font-weight\": \"700\",\n    \"margin-top\": \"10px\"\n  }\n}, \"Изображение\", -1 /* HOISTED */));\nconst _hoisted_14 = {\n  class: \"\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Название: \", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_17 = {\n  class: \"\"\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" IP: \", -1 /* HOISTED */));\nconst _hoisted_19 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_20 = {\n  class: \"\"\n};\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Канал: \", -1 /* HOISTED */));\nconst _hoisted_22 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_23 = {\n  key: 1,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_24 = {\n  class: \"\"\n};\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Кодек: \", -1 /* HOISTED */));\nconst _hoisted_26 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_27 = {\n  class: \"\"\n};\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Логин: \", -1 /* HOISTED */));\nconst _hoisted_29 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_30 = {\n  class: \"\"\n};\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Пароль: \", -1 /* HOISTED */));\nconst _hoisted_32 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group\",\n  style: {\n    \"width\": \"100px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Сохранить\")], -1 /* HOISTED */));\nconst _hoisted_34 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  style: {\n    \"font-weight\": \"700\"\n  }\n}, \"Сектора\", -1 /* HOISTED */));\nconst _hoisted_35 = [\"onUpdate:modelValue\"];\nconst _hoisted_36 = [\"onUpdate:modelValue\"];\nconst _hoisted_37 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_38 = {\n  class: \"col-5\"\n};\nconst _hoisted_39 = {\n  class: \"col-12 window\"\n};\nconst _hoisted_40 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Изображение\", -1 /* HOISTED */));\nconst _hoisted_41 = [\"src\"];\nconst _hoisted_42 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Информация сектора\", -1 /* HOISTED */));\nconst _hoisted_43 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Сектор\", -1 /* HOISTED */));\nconst _hoisted_44 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Техническая информация:\", -1 /* HOISTED */));\nconst _hoisted_45 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", null, \"Границы:\", -1 /* HOISTED */));\nconst _hoisted_46 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", null, \"Высота от пола:\", -1 /* HOISTED */));\nconst _hoisted_47 = {\n  key: 0\n};\nconst _hoisted_48 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Справка:\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"button\", {\n    class: \"add\",\n    style: {\n      \"margin-top\": \"5px\"\n    },\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.resetCamera && $options.resetCamera(...args))\n  }, \"Добавить\")])]), _hoisted_6, _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getCameras, (camera, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row window camera col-12\",\n      onClick: $event => $options.chooseCamera(camera),\n      key: index\n    }, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(camera.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(camera.IP), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.save && $options.save(...args), [\"prevent\"])),\n    style: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.camera.name.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.camera.name = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.name, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.name.$dirty && $setup.v$.camera.name.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_16, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.camera.IP.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.camera.IP = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.IP, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.IP.$dirty && $setup.v$.camera.IP.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_19, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.camera.channel.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.camera.channel = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.channel, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.channel.$dirty && $setup.v$.camera.channel.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_22, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true), $setup.v$.camera.channel.$dirty && $setup.v$.camera.channel.integer.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_23, \" Канал должен быть числом \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_24, [_hoisted_25, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.camera.codec.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.camera.codec = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.codec, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.codec.$dirty && $setup.v$.camera.codec.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_26, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_27, [_hoisted_28, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.camera.login.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.camera.login = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.login, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.login.$dirty && $setup.v$.camera.login.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_29, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_30, [_hoisted_31, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.camera.password.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.camera.password = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.password, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.password.$dirty && $setup.v$.camera.password.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_32, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_hoisted_33, _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[7] || (_cache[7] = $event => {\n      _ctx.removeCamera($data.camera.id);\n      $options.resetCamera();\n    }),\n    style: {\n      \"position\": \"absolute\",\n      \"right\": \"0\",\n      \"margin-bottom\": \"100px\"\n    }\n  }, \" Удалить \")])], 32 /* HYDRATE_EVENTS */), _hoisted_34, _createElementVNode(\"button\", {\n    style: {\n      \"position\": \"absolute\",\n      \"right\": \"0\",\n      \"margin-right\": \"30px\"\n    },\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.addSectorToCamera && $options.addSectorToCamera(...args))\n  }, \"Добавить\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.camera.sectors, (cameraSector, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"\",\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"input-field-sector\",\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => cameraSector.name = $event,\n      placeholder: \"Название\"\n    }, null, 8 /* PROPS */, _hoisted_35), [[_vModelText, cameraSector.name, void 0, {\n      trim: true\n    }]]), _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => cameraSector.type = $event\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getSectorTypes, (sectorType, index) => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: index\n      }, _toDisplayString(sectorType), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_36), [[_vModelSelect, cameraSector.type]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_37]), _createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"div\", _hoisted_39, [_hoisted_40, _createCommentVNode(\"            <img src=\\\"http://192.168.248.32:5000/videoStream\\\" style=\\\"width: 100%\\\">\"), _createElementVNode(\"img\", {\n    src: require('../assets/images/img1.png'),\n    style: {\n      \"width\": \"100%\"\n    },\n    alt: \"img1\"\n  }, null, 8 /* PROPS */, _hoisted_41), _hoisted_42, _hoisted_43, _hoisted_44, _createElementVNode(\"ul\", null, [_hoisted_45, _hoisted_46, _createElementVNode(\"li\", null, [_createTextVNode(\"Тип сектора: \"), $data.cameraSelected ? (_openBlock(), _createElementBlock(\"span\", _hoisted_47, _toDisplayString($data.camera.sectors.type), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]), _hoisted_48])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","args","$options","resetCamera","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","_ctx","getCameras","camera","index","$event","chooseCamera","key","_hoisted_10","_toDisplayString","name","_hoisted_11","IP","_hoisted_12","_hoisted_13","onSubmit","_withModifiers","save","_hoisted_14","_hoisted_15","_normalizeClass","$setup","v$","$error","$data","$dirty","required","$invalid","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","channel","_hoisted_22","integer","_hoisted_23","_hoisted_24","_hoisted_25","codec","_hoisted_26","_hoisted_27","_hoisted_28","login","_hoisted_29","_hoisted_30","_hoisted_31","password","_hoisted_32","_hoisted_33","removeCamera","id","_hoisted_34","addSectorToCamera","sectors","cameraSector","placeholder","getSectorTypes","sectorType","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_createCommentVNode","src","require","alt","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","cameraSelected","_hoisted_47","_hoisted_48"],"sources":["D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CamerasPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\" >\r\n      <div class=\"row justify-content-around\">\r\n        <div class=\"col-3\">\r\n            <div class=\"row\">\r\n              <label class=\"field\">Камеры</label>\r\n              <button class=\"add\" style=\"margin-top: 5px\" @click=\"resetCamera\">Добавить</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <label class=\"field\">Настройка</label>\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <label class=\"field\">Просмотр</label>\r\n        </div>\r\n        <div class=\"col-3\" >\r\n          <div class=\"row window camera col-12\" @click=\"chooseCamera(camera)\" v-for=\"(camera, index) in getCameras\"\r\n               :key=\"index\">\r\n              <span class=\"cam-name\">{{camera.name}}</span>\r\n              <span class=\"cam-ip\">{{camera.IP}}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4 window\">\r\n          <label style=\"font-weight: 700; margin-top: 10px\">Изображение</label>\r\n          <form @submit.prevent=\"save\" style=\"margin-top: 10px\">\r\n            <div class=\"\">\r\n              <label> Название: </label>\r\n              <input class=\" input-field\" type=\"text\" v-model.trim=\"camera.name\"\r\n                     :class=\"v$.camera.name.$error ? 'is-invalid' : ''\" >\r\n              <p v-if=\"v$.camera.name.$dirty && v$.camera.name.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> IP: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"camera.IP\"\r\n                     :class=\"v$.camera.IP.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.IP.$dirty && v$.camera.IP.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> Канал: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"camera.channel\"\r\n                     :class=\"v$.camera.channel.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.channel.$dirty && v$.camera.channel.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n              <p v-if=\"v$.camera.channel.$dirty && v$.camera.channel.integer.$invalid \" class=\"invalid-feedback\">\r\n                Канал должен быть числом\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> Кодек: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"camera.codec\"\r\n                     :class=\"v$.camera.codec.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.codec.$dirty && v$.camera.codec.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> Логин: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"camera.login\"\r\n                     :class=\"v$.camera.login.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.login.$dirty && v$.camera.login.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> Пароль: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"camera.password\"\r\n                     :class=\"v$.camera.password.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.password.$dirty && v$.camera.password.required.$invalid \" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <div class=\"form-group\" style=\"width: 100px;\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" >Сохранить</button>\r\n              </div>\r\n              <button\r\n                  class=\"btn btn-primary\"\r\n                  @click=\"removeCamera(camera.id); resetCamera()\"\r\n                  style=\"position: absolute; right: 0; margin-bottom: 100px\">\r\n                Удалить\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <label style=\"font-weight: 700\">Сектора</label>\r\n\r\n          <button style=\"position: absolute; right: 0; margin-right: 30px\" @click=\"addSectorToCamera\">Добавить</button>\r\n          <div class=\"\" v-for=\"(cameraSector, index) in camera.sectors\" :key=\"index\">\r\n            <input class=\"input-field-sector\" type=\"text\" v-model.trim=\"cameraSector.name\" placeholder=\"Название\">\r\n            <select v-model=\"cameraSector.type\">\r\n              <option v-for=\"(sectorType, index) in getSectorTypes\" :key=\"index\">\r\n                {{sectorType}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <br>\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <div class=\"col-12 window\">\r\n            <p>Изображение</p>\r\n<!--            <img src=\"http://192.168.248.32:5000/videoStream\" style=\"width: 100%\">-->\r\n            <img :src=\"require('../assets/images/img1.png')\" style=\"width: 100%\" alt=\"img1\">\r\n            <p>Информация сектора</p>\r\n            <p>Сектор</p>\r\n            <span>Техническая информация:</span>\r\n            <ul>\r\n              <li>Границы:</li>\r\n              <li>Высота от пола:</li>\r\n              <li>Тип сектора: <span v-if=\"cameraSelected\">{{camera.sectors.type}}</span></li>\r\n            </ul>\r\n            <p>Справка:</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex'\r\nimport {mapActions} from 'vuex'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required, integer} from '@vuelidate/validators'\r\n\r\nexport default {\r\n  name: \"CamerasPage\",\r\n  setup () {\r\n    return {\r\n      v$: useVuelidate()\r\n    }\r\n  },\r\n  data(){\r\n    return {\r\n      camera: {\r\n        id : -1,\r\n        roomID: -1,\r\n        name: '',\r\n        IP: '',\r\n        channel : '',\r\n        codec : '',\r\n        login : '',\r\n        password : '',\r\n        sectors: []\r\n      },\r\n      sector: {\r\n        id: -1,\r\n        name: '',\r\n        type: ''\r\n      },\r\n      count: 0,\r\n      cameraSelected: false\r\n    }\r\n  },\r\n  validations: {\r\n    camera: {\r\n      name: {required},\r\n      IP: {required},\r\n      channel: {required, integer},\r\n      codec: {required},\r\n      login: { required },\r\n      password: {required},\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n        'getCameras',\r\n        'getCameraByID',\r\n        'getSectorTypes',\r\n        'getCameraCount',\r\n        'getCameraIndex'\r\n    ]),\r\n  },\r\n  mounted() {\r\n    if (this.getCameras.length === 0){\r\n      this.getCamerasFromDB()\r\n    }\r\n  },\r\n  methods: {\r\n    getCamerasFromDB() {\r\n      fetch('http://localhost:5000/getCameras', {\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.text())\r\n          .then((response) => {\r\n            console.log(response)\r\n            response = JSON.parse(response)\r\n            response.forEach(camera => {\r\n              let cameraCopy = Object.assign({}, this.camera)\r\n              cameraCopy.id = camera.id\r\n              cameraCopy.name = camera.name\r\n              cameraCopy.IP = camera.ip\r\n              cameraCopy.channel = camera.chanel\r\n              cameraCopy.codec = camera.codec\r\n              cameraCopy.login = camera.login\r\n              cameraCopy.password = camera.password\r\n              this.addCamera(cameraCopy)\r\n            })\r\n          });\r\n    },\r\n    setCamera() {\r\n      fetch('http://localhost:5000/setCamera', {\r\n        method: 'POST',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n\r\n        },\r\n        body: JSON.stringify({\r\n          \"chanel\": this.camera.channel,\r\n          \"codec\": this.camera.codec,\r\n          \"id\": null,\r\n          \"ip\": this.camera.IP,\r\n          \"login\": this.camera.login,\r\n          \"name\": this.camera.name,\r\n          \"password\": this.camera.password\r\n        })\r\n      })\r\n          .then(response => response.text())\r\n          .then((response) => {\r\n            let savedCamera = JSON.parse(response)\r\n            this.camera.id = savedCamera.id\r\n            console.log('idThis ' + this.camera.id)\r\n            this.saveCameraCopy()\r\n          });\r\n    },\r\n    save() {\r\n      this.v$.camera.$touch()\r\n      if (!this.v$.camera.$error) {\r\n        console.log('Валидация прошла успешно')\r\n        this.setCamera()\r\n      }\r\n      else console.log('Валидация не прошла')\r\n    },\r\n    saveCameraCopy() {\r\n      let cameraCopy = Object.assign({}, this.camera)\r\n      let sectorsCopy = Object.assign({}, this.camera.sectors)\r\n      console.log('idCopy ' + cameraCopy.id)\r\n      cameraCopy.sectors = sectorsCopy\r\n      this.addCamera(cameraCopy)\r\n      this.v$.camera.$reset()\r\n    },\r\n    chooseCamera(camera) {\r\n      console.log(camera.id)\r\n      this.camera = this.getCameraByID(camera.id)\r\n      this.cameraSelected = true\r\n    },\r\n    resetCamera(){\r\n      let cameraCopy = Object.assign({}, this.camera)\r\n      // let sectorsCopy = Object.assign({}, this.camera.sectors)\r\n      // cameraCopy.sectors = sectorsCopy\r\n      this.camera = cameraCopy\r\n      this.camera.id = -1\r\n      this.camera.roomID = -1\r\n      this.camera.name = ''\r\n      this.camera.IP = ''\r\n      this.camera.codec = ''\r\n      this.camera.channel = ''\r\n      this.camera.login = ''\r\n      this.camera.password = ''\r\n      this.camera.sectors = []\r\n      this.cameraSelected = false\r\n      this.sector.name = ''\r\n      this.sector.type = ''\r\n      this.sector.id = -1\r\n    },\r\n    addSectorToCamera() {\r\n      console.log('print')\r\n      this.sector.id = this.count\r\n      this.count++\r\n      this.camera.sectors.push(Object.assign({}, this.sector))\r\n    },\r\n    ...mapActions([\r\n        'addCamera',\r\n        'addCameraCount',\r\n        'removeCamera'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.window{\r\n  box-shadow: 0 3px 4px rgba(0,0,0,.25);\r\n  border-radius: 10px ;\r\n}\r\n.input-field{\r\n  outline: none;\r\n  width: 200px;\r\n  height: 25px;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 15px;\r\n  border-radius: 5px ;\r\n  border: 1px solid grey;\r\n}\r\n.input-field-sector{\r\n  outline: none;\r\n  width: 150px;\r\n  height: 25px;\r\n  font-size: 14px;\r\n  margin-right: 15px;\r\n  border-radius: 5px ;\r\n  border: 1px solid grey;\r\n}\r\n.camera:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\n.cam-name{\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin: 7px;\r\n}\r\n.cam-ip{\r\n  font-size: 12px;\r\n  font-weight: 300;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 30px;\r\n  margin-top: 10px;\r\n}\r\n.add{\r\n  width: 110px;\r\n  /*height: 35px;*/\r\n  position: absolute;\r\n  right: 0;\r\n  /*top: 0;*/\r\n  margin-right: 30px;\r\n  border-radius: 10px;\r\n  font-size: 18px;\r\n}\r\n.add:hover{\r\n  background-color: #dadada;\r\n}\r\n.field {\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}