{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { mapActions } from 'vuex';\nimport { useVuelidate } from '@vuelidate/core';\nimport { required } from '@vuelidate/validators';\nexport default {\n  name: \"RoomsPage\",\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      room: {\n        id: -1,\n        name: '',\n        class: ''\n      },\n      count: 0,\n      roomSelected: false\n    };\n  },\n  validations: {\n    room: {\n      name: {\n        required\n      },\n      class: {\n        required\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['getRooms', 'getRoomByID'])\n  },\n  methods: {\n    save() {\n      this.v$.room.$touch();\n      if (!this.v$.room.$error) {\n        console.log('Валидация прошла успешно');\n        this.room.id = this.count;\n        this.count++;\n        let roomCopy = Object.assign({}, this.room);\n        this.addRoom(roomCopy);\n        this.v$.room.$reset();\n      } else console.log('Валидация не прошла');\n    },\n    chooseRoom(room) {\n      console.log(room.id);\n      this.room = this.getRoomByID(room.id);\n      this.roomSelected = true;\n    },\n    resetRoom() {\n      let roomCopy = Object.assign({}, this.room);\n      this.room = roomCopy;\n      this.room.name = '';\n      this.room.class = '';\n    },\n    ...mapActions(['addRoom'])\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","useVuelidate","required","name","setup","v$","data","room","id","class","count","roomSelected","validations","computed","methods","save","$touch","$error","console","log","roomCopy","Object","assign","addRoom","$reset","chooseRoom","getRoomByID","resetRoom"],"sources":["D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\RoomsPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\" >\r\n      <div class=\"row justify-content-around\">\r\n        <div class=\"col-3\">\r\n          <div class=\"row\">\r\n            <label class=\"field\">Помещения</label>\r\n            <button id=\"add\" style=\"margin-top: 5px\" @click=\"resetRoom\">Добавить</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <label class=\"field\">Добавить</label>\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <label class=\"field\">Просмотр</label>\r\n        </div>\r\n        <div class=\"col-3\" >\r\n          <div class=\"row window camera col-12\" @click=\"chooseRoom(room)\" v-for=\"(room, index) in getRooms\"\r\n               :key=\"index\">\r\n            <span class=\"room-name\">{{room.name}}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-4 window\">\r\n          <label style=\"font-weight: 700; margin-top: 10px\">Помещение</label>\r\n          <form @submit.prevent=\"save\" style=\"margin-top: 10px\">\r\n            <div class=\"\">\r\n              <label> Название: </label>\r\n              <input class=\" input-field\" type=\"text\" v-model.trim=\"room.name\"\r\n                     :class=\"v$.room.name.$error ? 'is-invalid' : ''\" >\r\n              <p v-if=\"v$.room.name.$dirty && v$.room.name.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> Класс помещения: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"room.class\"\r\n                     :class=\"v$.room.class.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.room.class.$dirty && v$.room.class.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\" >\r\n              <button type=\"submit\" class=\"btn btn-primary\" >Сохранить</button>\r\n            </div>\r\n          </form>\r\n          <label style=\"font-weight: 700\">Сектора</label>\r\n          <div class=\"row\">\r\n            <div class=\"col-6\">\r\n              <label>Назначенные</label>\r\n              <table>\r\n                <tr>\r\n                  <td>Камера 1</td>\r\n                </tr>\r\n                <tr><td>Камера 2</td></tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <label>Существующие</label>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <div class=\"col-12 window\">\r\n            <p>Изображение</p>\r\n            <p>Информация сектора</p>\r\n            <p>Сектор</p>\r\n            <span>Техническая информация:</span>\r\n            <ul>\r\n              <li>Границы:</li>\r\n              <li>Высота от пола:</li>\r\n              <li>Тип сектора: <span v-if=\"roomSelected\"></span></li>\r\n            </ul>\r\n            <p>Справка:</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex'\r\nimport {mapActions} from 'vuex'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required} from '@vuelidate/validators'\r\n\r\n\r\nexport default {\r\n  name: \"RoomsPage\",\r\n  setup () {\r\n    return {\r\n      v$: useVuelidate()\r\n    }\r\n  },\r\n  data(){\r\n    return {\r\n      room: {\r\n        id: -1,\r\n        name: '',\r\n        class: ''\r\n      },\r\n      count: 0,\r\n      roomSelected: false\r\n    }\r\n  },\r\n  validations: {\r\n    room: {\r\n      name: {required},\r\n      class: {required}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'getRooms',\r\n      'getRoomByID'\r\n    ]),\r\n  },\r\n  methods: {\r\n    save() {\r\n      this.v$.room.$touch()\r\n      if (!this.v$.room.$error) {\r\n        console.log('Валидация прошла успешно')\r\n        this.room.id = this.count\r\n        this.count++\r\n        let roomCopy = Object.assign({}, this.room)\r\n        this.addRoom(roomCopy)\r\n        this.v$.room.$reset()\r\n      }\r\n      else console.log('Валидация не прошла')\r\n    },\r\n    chooseRoom(room) {\r\n      console.log(room.id)\r\n      this.room = this.getRoomByID(room.id)\r\n      this.roomSelected = true\r\n    },\r\n    resetRoom(){\r\n      let roomCopy = Object.assign({}, this.room)\r\n      this.room = roomCopy\r\n      this.room.name = ''\r\n      this.room.class = ''\r\n    },\r\n    ...mapActions([\r\n      'addRoom'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#add{\r\n  width: 110px;\r\n  /*height: 35px;*/\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  margin-right: 30px;\r\n  border-radius: 10px;\r\n  font-size: 20px;\r\n}\r\n.window{\r\n  box-shadow: 0 3px 4px rgba(0,0,0,.25);\r\n  border-radius: 10px ;\r\n}\r\n.camera:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\n.field {\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n}\r\n.room-name{\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin: 7px;\r\n}\r\n.input-field{\r\n  outline: none;\r\n  width: 200px;\r\n  height: 25px;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 15px;\r\n  border-radius: 5px ;\r\n  border: 1px solid grey;\r\n}\r\ntr:nth-child(even) {\r\n  background: rgba(0,0,0,.2);\r\n}\r\n</style>"],"mappings":"AAoFA,SAAQA,UAAU,QAAO,MAAK;AAC9B,SAAQC,UAAU,QAAO,MAAK;AAC9B,SAASC,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAQ,QAAO,uBAAsB;AAG9C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAIA,CAAA,EAAK;IACP,OAAO;MACLC,EAAE,EAAEJ,YAAY,CAAC;IACnB;EACF,CAAC;EACDK,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,CAAC,CAAC;QACNL,IAAI,EAAE,EAAE;QACRM,KAAK,EAAE;MACT,CAAC;MACDC,KAAK,EAAE,CAAC;MACRC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,WAAW,EAAE;IACXL,IAAI,EAAE;MACJJ,IAAI,EAAE;QAACD;MAAQ,CAAC;MAChBO,KAAK,EAAE;QAACP;MAAQ;IAClB;EACF,CAAC;EACDW,QAAQ,EAAE;IACR,GAAGd,UAAU,CAAC,CACZ,UAAU,EACV,aAAY,CACb;EACH,CAAC;EACDe,OAAO,EAAE;IACPC,IAAIA,CAAA,EAAG;MACL,IAAI,CAACV,EAAE,CAACE,IAAI,CAACS,MAAM,CAAC;MACpB,IAAI,CAAC,IAAI,CAACX,EAAE,CAACE,IAAI,CAACU,MAAM,EAAE;QACxBC,OAAO,CAACC,GAAG,CAAC,0BAA0B;QACtC,IAAI,CAACZ,IAAI,CAACC,EAAC,GAAI,IAAI,CAACE,KAAI;QACxB,IAAI,CAACA,KAAK,EAAC;QACX,IAAIU,QAAO,GAAIC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACf,IAAI;QAC1C,IAAI,CAACgB,OAAO,CAACH,QAAQ;QACrB,IAAI,CAACf,EAAE,CAACE,IAAI,CAACiB,MAAM,CAAC;MACtB,OACKN,OAAO,CAACC,GAAG,CAAC,qBAAqB;IACxC,CAAC;IACDM,UAAUA,CAAClB,IAAI,EAAE;MACfW,OAAO,CAACC,GAAG,CAACZ,IAAI,CAACC,EAAE;MACnB,IAAI,CAACD,IAAG,GAAI,IAAI,CAACmB,WAAW,CAACnB,IAAI,CAACC,EAAE;MACpC,IAAI,CAACG,YAAW,GAAI,IAAG;IACzB,CAAC;IACDgB,SAASA,CAAA,EAAE;MACT,IAAIP,QAAO,GAAIC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACf,IAAI;MAC1C,IAAI,CAACA,IAAG,GAAIa,QAAO;MACnB,IAAI,CAACb,IAAI,CAACJ,IAAG,GAAI,EAAC;MAClB,IAAI,CAACI,IAAI,CAACE,KAAI,GAAI,EAAC;IACrB,CAAC;IACD,GAAGT,UAAU,CAAC,CACZ,SAAQ,CACT;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}