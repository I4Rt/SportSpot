{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"CalendarPage\",\n  data() {\n    return {\n      task: {\n        id: null,\n        name: '',\n        comment: '',\n        roomId: null,\n        targetCount: null,\n        begin: '',\n        end: '',\n        color: ''\n      },\n      generatedColor: this.randomRGBA(),\n      indexStart: null,\n      indexEnd: null,\n      indexSelected: null,\n      onMousedown: false,\n      timesArray: [],\n      busyTimesArray: [],\n      roomSelected: false,\n      roomSelectedId: null,\n      prevCalendarIndex: null,\n      selectedDay: '',\n      daysCount: 32,\n      currentMonth: new Date().getMonth(),\n      currentYear: new Date().getFullYear(),\n      calendarMonths30: [3, 5, 8, 10],\n      calendarMonths31: [0, 2, 4, 6, 7, 9, 11],\n      calendarMonths: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n      calendarDays: ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'],\n      days: null,\n      missedDays: null\n    };\n  },\n  computed: {\n    ...mapGetters(['getRooms', 'getTasks'])\n  },\n  mounted() {\n    this.setCorrectMonth();\n    this.getRoomsFromDB();\n    this.createTimesArray();\n  },\n  methods: {\n    save() {\n      console.log('save');\n      fetch('http://localhost:5000/setTask', {\n        method: 'POST',\n        cors: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({\n          \"id\": null,\n          \"name\": this.task.name,\n          \"comment\": this.task.comment,\n          \"roomId\": this.roomSelectedId,\n          \"targetCount\": this.task.targetCount,\n          \"begin\": `${this.selectedDay} ${this.indexStart}:00`,\n          \"end\": `${this.selectedDay} ${this.indexEnd}:00`\n        })\n      }).then(response => response.json()).then(response => {\n        console.log(`${this.selectedDay} ${this.indexStart}:00`);\n        console.log(`${this.selectedDay} ${this.indexEnd}:00`);\n        console.log(response);\n        this.task.id = response.id;\n        this.$store.commit('setTask', Object.assign({}, this.room));\n        // this.v$.room.$reset()\n      });\n    },\n\n    getRoomsFromDB() {\n      fetch('http://localhost:5000/getRooms', {\n        method: 'GET',\n        cors: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        }\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.$store.state.rooms = response;\n      });\n    },\n    getTasksFromDB() {\n      fetch('http://localhost:5000/getTasks', {\n        method: 'POST',\n        cors: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({\n          \"date\": this.selectedDay\n        })\n      }).then(response => response.json()).then(response => {\n        console.log(response);\n        this.$store.state.tasks = response;\n        console.log(this.randomRGBA());\n        for (let task of this.getTasks) {\n          let indexStart = this.getTimeIndex(task.begin);\n          let indexEnd = this.getTimeIndex(task.end);\n          let sliceArray = this.$data.timesArray.slice(indexStart, indexEnd + 1);\n          console.log('sliceArray ' + indexStart, indexEnd);\n          task.color = this.randomRGBA();\n          this.rgbaToHex(task.color);\n          this.paintTimesArray(sliceArray, task.color);\n          for (let time of sliceArray) {\n            this.busyTimesArray.push(time);\n            // console.log('busy ' + time)\n          }\n        }\n        // this.task.id = response.id\n        // this.$store.commit('setTask', Object.assign({}, this.room))\n        // this.v$.room.$reset()\n      });\n    },\n\n    getTimeIndex(time) {\n      let getTime = new Date(time);\n      let date = `${getTime.getHours().toString().length === 1 ? \"0\" : \"\"}${getTime.getHours()}:${getTime.getMinutes().toString().length === 1 ? \"0\" : \"\"}${getTime.getMinutes()}`;\n      console.log('date ' + date);\n      return this.timesArray.indexOf(date);\n    },\n    randomRGBA() {\n      let o = Math.round,\n        r = Math.random,\n        s = 255;\n      return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',0.25)';\n    },\n    rgbaToHex(color) {\n      let splitColor = color.split(\",\");\n      let r = splitColor[1].slice();\n    },\n    setIndices(index) {\n      let indexStart = null;\n      let indexEnd = null;\n      if (index < this.indexSelected) {\n        indexEnd = this.$data.indexSelected;\n        indexStart = index;\n      } else {\n        indexStart = this.indexSelected;\n        indexEnd = index;\n      }\n      let sliceArray = this.$data.timesArray.slice(indexStart, indexEnd + 1);\n      console.log(`indexStart:${indexStart}; indexEnd:${indexEnd};`);\n      if (this.onMousedown === true) this.paintTimesArray(sliceArray);\n    },\n    paintTimesArray(sliceArray, selectedColor) {\n      let color = this.generatedColor;\n      if (arguments.length === 2) color = selectedColor;\n      for (let i of this.timesArray) {\n        if (!this.busyTimesArray.includes(i)) {\n          if (sliceArray.includes(i)) {\n            console.log('include');\n            document.getElementById(i).style.setProperty('--color', color);\n            document.getElementById(i).classList.add('linear-table-td-painted');\n          } else document.getElementById(i).classList.remove('linear-table-td-painted');\n          this.indexStart = sliceArray[0];\n          this.indexEnd = sliceArray[sliceArray.length - 1];\n        }\n      }\n    },\n    chooseMonth(value) {\n      if (value === 'back') {\n        if (this.currentMonth === 0) {\n          this.currentMonth = 11;\n          this.currentYear -= 1;\n        } else this.currentMonth -= 1;\n      } else if (value === 'next') {\n        if (this.currentMonth === 11) {\n          this.currentMonth = 0;\n          this.currentYear += 1;\n        } else this.currentMonth += 1;\n      }\n      this.setCorrectMonth();\n    },\n    chooseDay(day, index) {\n      let monthStr = this.currentMonth + 1;\n      if (day.toString().length !== 2) day = `0${day}`;\n      if (monthStr.toString().length !== 2) monthStr = `0${monthStr}`;\n      this.selectedDay = `${monthStr}/${day}/${this.currentYear}`;\n      console.log(index + ' ' + this.prevCalendarIndex);\n      document.getElementById(index).classList.add('calendar-number-selected');\n      if (this.prevCalendarIndex !== null) document.getElementById(this.prevCalendarIndex).classList.remove('calendar-number-selected');\n      this.prevCalendarIndex = index;\n      if (this.roomSelected) {\n        this.busyTimesArray = [];\n        for (let i of this.timesArray) document.getElementById(i).classList.remove('linear-table-td-painted');\n        this.getTasksFromDB();\n      }\n    },\n    chooseRoom(room) {\n      this.roomSelected = true;\n      this.roomSelectedId = room.id;\n      console.log(this.selectedDay);\n      console.log(room);\n      this.getTasksFromDB();\n    },\n    getCurrentDay() {\n      let curDay = new Date();\n      this.currentMonth = curDay.getMonth();\n      this.currentYear = curDay.getFullYear();\n      this.setCorrectMonth();\n    },\n    setCorrectMonth() {\n      let curDay = new Date();\n      curDay.get;\n      curDay.setDate(1);\n      curDay.setMonth(this.currentMonth);\n      curDay.setFullYear(this.currentYear);\n      let day = curDay.getDay();\n      if (day === 0) this.missedDays = [...Array(6)];else this.missedDays = [...Array(day - 1)];\n      if (this.calendarMonths30.includes(this.currentMonth)) this.daysCount = 31;else if (this.calendarMonths31.includes(this.currentMonth)) this.daysCount = 32;else if (this.currentYear % 4 === 0) this.daysCount = 30;else this.daysCount = 29;\n      this.days = [...Array(this.daysCount).keys()].slice(1);\n    },\n    createTimesArray() {\n      for (let i = 0; i < 25; i++) {\n        let setTime = \"\";\n        // let hourArray = []\n        if (i.toString().length !== 2) setTime = \"0\";\n        this.timesArray.push(`${setTime}${i}:00`);\n        this.timesArray.push(`${setTime}${i}:30`);\n        // this.timesArray.push(hourArray)\n      }\n\n      this.timesArray.pop();\n      // console.log(this.timesArray)\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","task","id","comment","roomId","targetCount","begin","end","color","generatedColor","randomRGBA","indexStart","indexEnd","indexSelected","onMousedown","timesArray","busyTimesArray","roomSelected","roomSelectedId","prevCalendarIndex","selectedDay","daysCount","currentMonth","Date","getMonth","currentYear","getFullYear","calendarMonths30","calendarMonths31","calendarMonths","calendarDays","days","missedDays","computed","mounted","setCorrectMonth","getRoomsFromDB","createTimesArray","methods","save","console","log","fetch","method","cors","headers","body","JSON","stringify","then","response","json","$store","commit","Object","assign","room","state","rooms","getTasksFromDB","tasks","getTasks","getTimeIndex","sliceArray","$data","slice","rgbaToHex","paintTimesArray","time","push","getTime","date","getHours","toString","length","getMinutes","indexOf","o","Math","round","r","random","s","splitColor","split","setIndices","index","selectedColor","arguments","i","includes","document","getElementById","style","setProperty","classList","add","remove","chooseMonth","value","chooseDay","day","monthStr","chooseRoom","getCurrentDay","curDay","get","setDate","setMonth","setFullYear","getDay","Array","keys","setTime","pop"],"sources":["D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CalendarPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\" @mouseup=\"onMousedown=false\">\r\n      <div class=\"row justify-content-around\">\r\n      <div class=\"col-6\">\r\n        <label class=\"field\">Календарь</label>\r\n      </div>\r\n        <div class=\"col-6\">\r\n          <label v-if=\"!roomSelected\" class=\"field\">Помещения</label>\r\n          <label v-if=\"roomSelected\" class=\"field\">Помещение 1 {{selectedDay}}</label>\r\n        </div>\r\n      <div class=\"col-6 \" >\r\n        <div class=\"col-12 window window-onPage\" style=\"display: flow-root\">\r\n          <div  class=\"calendar window\">\r\n            <div class=\"calendar-month\">\r\n              <div class=\"calendar-month-el\">\r\n                <button @click=\"chooseMonth('back')\" class=\"hidden-button\">\r\n                  <img  :src=\"require('../assets/icons/back.png')\" alt=\"\">\r\n                </button>\r\n                <button @click=\"chooseMonth('next')\" class=\"hidden-button\" >\r\n                  <img  :src=\"require('../assets/icons/next.png')\" alt=\"\">\r\n                </button>\r\n                <div class=\"content content-center\"> {{calendarMonths[currentMonth]}} </div>\r\n                <div class=\"content content-start\"> {{currentYear}} </div>\r\n                <button @click=\"getCurrentDay\" class=\"hidden-button\" title=\"К сегодняшнему дню\">\r\n                  <img  :src=\"require('../assets/icons/today24px.png')\" alt=\"\">\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"calendar-date\">\r\n              <div\r\n                  class=\"calendar-day\"\r\n                  v-for=\"(calendarDay, index) in calendarDays\"\r\n                  :key=\"index\">\r\n                {{calendarDay}}\r\n              </div>\r\n              <div class=\"calendar-number\" v-for=\"(index) in missedDays\" :key=\"index\"></div>\r\n              <div\r\n                  @click=\"chooseDay(day, index)\"\r\n                  :class=\"[new Date().getDate() === day &&\r\n                  currentMonth === new Date().getMonth() &&\r\n                  currentYear === new Date().getFullYear() ? 'calendar-number-current' : '']\"\r\n                  class=\"calendar-number\"\r\n                  v-for=\"(day, index) in days\"\r\n                  :key=\"index\"\r\n                  :id=\"index\">\r\n                {{day}}\r\n              </div>\r\n<!--              <div class=\"calendar-number\">1</div>-->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\" >\r\n        <div class=\"col-12 window window-onPage\">\r\n          <div v-if=\"selectedDay.length !== 0\" class=\"row\">\r\n            <div v-if=\"!roomSelected\" class=\"col-6\">\r\n              Занятые\r\n            </div>\r\n            <div v-if=\"!roomSelected\" class=\"col-6\">\r\n              Свободные\r\n              <div class=\"row window camera col-12\" @click=\"chooseRoom(room)\" v-for=\"(room, index) in getRooms\"\r\n                   :key=\"index\">\r\n                <span class=\"name\">{{room.name}}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" v-if=\"roomSelected\">\r\n            <div class=\"col-5\">\r\n              Расписание\r\n              <div class=\"window\">\r\n                <table\r\n                    class=\"linear-table window-table\"\r\n                    style=\"width: 100%\"\r\n                    @mousedown=\"onMousedown=true\">\r\n                  <tr\r\n                      v-for=\"(time, index) in timesArray\"\r\n                      :key=\"index\"\r\n                      onmousedown=\"return false\"\r\n                      onselect=\"return false\">\r\n                    <template v-if=\"2 * index < 49\">\r\n                      <td\r\n                          :id=\"timesArray[2 * index]\"\r\n                          class=\"linear-table-td\"\r\n                          @mouseenter = \"setIndices(2 * index)\"\r\n                          @mousedown = \"indexSelected = 2 * index; onMousedown = true; setIndices(2 * index)\">\r\n                        {{timesArray[2 * index]}}\r\n                      </td>\r\n                      <td\r\n                          :id=\"timesArray[2 * index + 1]\"\r\n                          class=\"linear-table-td\"\r\n                          @mouseenter=\"setIndices(2 * index + 1)\"\r\n                          @mousedown = \"indexSelected = 2 * index + 1; onMousedown = true; setIndices(2 * index + 1)\">\r\n                        {{timesArray[2 * index + 1]}}\r\n                      </td>\r\n                    </template>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-7\">\r\n              <div class=\"grid-default\">\r\n                Мероприятие\r\n                <button class=\"hidden-button content content-end\">\r\n                  <img src=\"../assets/icons/add24.png\" alt=\"\">\r\n                </button>\r\n              </div>\r\n              <form @submit.prevent=\"save\" style=\"margin-top: 10px\">\r\n                <div class=\"\">\r\n                  <label> Название: </label>\r\n                  <input class=\" input-field\" type=\"text\" v-model.trim=\"task.name\">\r\n                </div>\r\n                <div class=\"\">\r\n                  <label> Количество участников: </label>\r\n                  <input class=\"input-field\" type=\"text\" v-model.trim=\"task.targetCount\">\r\n                </div>\r\n                <div class=\"\">\r\n                  <label> Комментарий: </label>\r\n                  <input class=\"input-field\" type=\"text\" v-model.trim=\"task.comment\">\r\n                </div>\r\n                <div style=\"width: 50px; margin-bottom: 10px\">\r\n                  <button type=\"submit\" class=\"btn btn-success\" >Сохранить</button>\r\n                </div>\r\n              </form>\r\n              Список мероприятий\r\n                <div class=\"row\" v-for=\"(task, index) in this.getTasks\" :key=\"index\">\r\n                  <div class=\"window camera col-6\">\r\n                    <span class=\"name\">{{task.name}}</span>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <input type=\"color\" @change=\"setColor()\" v-model.trim=\"task.color\">\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from \"vuex\";\r\n\r\nexport default {\r\n  name: \"CalendarPage\",\r\n  data() {\r\n    return{\r\n      task: {\r\n        id: null,\r\n        name: '',\r\n        comment: '',\r\n        roomId: null,\r\n        targetCount: null,\r\n        begin: '',\r\n        end: '',\r\n        color: ''\r\n      },\r\n      generatedColor: this.randomRGBA(),\r\n\r\n      indexStart: null,\r\n      indexEnd: null,\r\n      indexSelected: null,\r\n      onMousedown: false,\r\n      timesArray: [],\r\n      busyTimesArray: [],\r\n\r\n      roomSelected: false,\r\n      roomSelectedId: null,\r\n\r\n      prevCalendarIndex: null,\r\n      selectedDay: '',\r\n      daysCount: 32,\r\n      currentMonth: new Date().getMonth(),\r\n      currentYear: new Date().getFullYear(),\r\n      calendarMonths30: [3, 5, 8, 10],\r\n      calendarMonths31: [0, 2, 4, 6, 7, 9, 11],\r\n      calendarMonths: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n        'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n      calendarDays: ['ПН','ВТ','СР','ЧТ','ПТ','СБ','ВС'],\r\n      days: null,\r\n      missedDays: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'getRooms',\r\n      'getTasks'\r\n    ])\r\n  },\r\n  mounted() {\r\n    this.setCorrectMonth()\r\n    this.getRoomsFromDB()\r\n    this.createTimesArray()\r\n  },\r\n  methods: {\r\n    save(){\r\n      console.log('save')\r\n      fetch('http://localhost:5000/setTask', {\r\n        method: 'POST',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\r\n          \"id\": null,\r\n          \"name\": this.task.name,\r\n          \"comment\": this.task.comment,\r\n          \"roomId\": this.roomSelectedId,\r\n          \"targetCount\": this.task.targetCount,\r\n          \"begin\": `${this.selectedDay} ${this.indexStart}:00`,\r\n          \"end\": `${this.selectedDay} ${this.indexEnd}:00`,\r\n        })\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log(`${this.selectedDay} ${this.indexStart}:00`)\r\n            console.log(`${this.selectedDay} ${this.indexEnd}:00`)\r\n            console.log(response)\r\n            this.task.id = response.id\r\n            this.$store.commit('setTask', Object.assign({}, this.room))\r\n            // this.v$.room.$reset()\r\n          });\r\n    },\r\n    getRoomsFromDB() {\r\n      fetch('http://localhost:5000/getRooms', {\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log(response)\r\n            this.$store.state.rooms = response\r\n          });\r\n    },\r\n    getTasksFromDB(){\r\n      fetch('http://localhost:5000/getTasks', {\r\n        method: 'POST',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\r\n          \"date\": this.selectedDay\r\n        })\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log(response)\r\n            this.$store.state.tasks = response\r\n            console.log(this.randomRGBA())\r\n            for (let task of this.getTasks){\r\n              let indexStart = this.getTimeIndex(task.begin)\r\n              let indexEnd = this.getTimeIndex(task.end)\r\n              let sliceArray = this.$data.timesArray.slice(indexStart, indexEnd+1)\r\n              console.log('sliceArray ' + indexStart, indexEnd)\r\n              task.color = this.randomRGBA()\r\n              this.rgbaToHex(task.color)\r\n              this.paintTimesArray(sliceArray, task.color)\r\n              for (let time of sliceArray){\r\n                this.busyTimesArray.push(time)\r\n                // console.log('busy ' + time)\r\n              }\r\n\r\n            }\r\n            // this.task.id = response.id\r\n            // this.$store.commit('setTask', Object.assign({}, this.room))\r\n            // this.v$.room.$reset()\r\n          });\r\n    },\r\n    getTimeIndex(time){\r\n      let getTime = new Date(time)\r\n      let date = `${getTime.getHours().toString().length === 1 ? \"0\" : \"\"}${getTime.getHours()}:${getTime.getMinutes().toString().length === 1 ? \"0\" : \"\"}${getTime.getMinutes()}`\r\n      console.log('date ' + date)\r\n      return this.timesArray.indexOf(date)\r\n    },\r\n    randomRGBA(){\r\n      let o = Math.round, r = Math.random, s = 255\r\n      return 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',0.25)'\r\n    },\r\n    rgbaToHex(color){\r\n      let splitColor = color.split(\",\")\r\n      let r = splitColor[1].slice()\r\n    },\r\n    setIndices(index){\r\n      let indexStart = null\r\n      let indexEnd = null\r\n      if (index < this.indexSelected) {\r\n        indexEnd = this.$data.indexSelected\r\n        indexStart = index\r\n      }\r\n      else {\r\n        indexStart = this.indexSelected\r\n        indexEnd = index\r\n      }\r\n      let sliceArray = this.$data.timesArray.slice(indexStart, indexEnd+1)\r\n      console.log(`indexStart:${indexStart}; indexEnd:${indexEnd};`)\r\n      if (this.onMousedown === true) this.paintTimesArray(sliceArray)\r\n    },\r\n    paintTimesArray(sliceArray, selectedColor){\r\n      let color = this.generatedColor\r\n      if (arguments.length === 2) color = selectedColor\r\n      for (let i of this.timesArray){\r\n        if (!this.busyTimesArray.includes(i)){\r\n          if (sliceArray.includes(i)){\r\n            console.log('include')\r\n            document.getElementById(i).style.setProperty('--color', color)\r\n            document.getElementById(i).classList.add('linear-table-td-painted')\r\n          }\r\n          else document.getElementById(i).classList.remove('linear-table-td-painted')\r\n          this.indexStart = sliceArray[0]\r\n          this.indexEnd = sliceArray[sliceArray.length-1]\r\n        }\r\n      }\r\n\r\n    },\r\n    chooseMonth(value){\r\n      if (value === 'back'){\r\n        if (this.currentMonth === 0) {\r\n          this.currentMonth = 11\r\n          this.currentYear -=1\r\n        }\r\n        else this.currentMonth -=1\r\n      }\r\n      else if (value === 'next'){\r\n        if (this.currentMonth === 11) {\r\n          this.currentMonth = 0\r\n          this.currentYear +=1\r\n        }\r\n        else this.currentMonth +=1\r\n      }\r\n      this.setCorrectMonth()\r\n    },\r\n    chooseDay(day, index){\r\n      let monthStr = this.currentMonth + 1\r\n      if (day.toString().length !== 2) day = `0${day}`\r\n      if (monthStr.toString().length !== 2) monthStr = `0${monthStr}`\r\n      this.selectedDay = `${monthStr}/${day}/${this.currentYear}`\r\n\r\n      console.log(index + ' ' + this.prevCalendarIndex)\r\n      document.getElementById(index).classList.add('calendar-number-selected')\r\n      if (this.prevCalendarIndex !== null) document.getElementById(this.prevCalendarIndex).classList.remove('calendar-number-selected')\r\n      this.prevCalendarIndex = index\r\n\r\n      if (this.roomSelected){\r\n        this.busyTimesArray = []\r\n        for (let i of this.timesArray) document.getElementById(i).classList.remove('linear-table-td-painted')\r\n        this.getTasksFromDB()\r\n      }\r\n    },\r\n    chooseRoom(room){\r\n      this.roomSelected = true\r\n      this.roomSelectedId = room.id\r\n      console.log(this.selectedDay)\r\n      console.log(room)\r\n      this.getTasksFromDB()\r\n    },\r\n    getCurrentDay(){\r\n      let curDay = new Date()\r\n      this.currentMonth = curDay.getMonth()\r\n      this.currentYear = curDay.getFullYear()\r\n      this.setCorrectMonth()\r\n    },\r\n    setCorrectMonth(){\r\n      let curDay = new Date()\r\n      curDay.get\r\n      curDay.setDate(1)\r\n      curDay.setMonth(this.currentMonth)\r\n      curDay.setFullYear(this.currentYear)\r\n      let day = curDay.getDay()\r\n      if (day === 0) this.missedDays = [...Array(6)]\r\n      else  this.missedDays = [...Array(day-1)]\r\n\r\n      if (this.calendarMonths30.includes(this.currentMonth)) this.daysCount = 31\r\n      else if (this.calendarMonths31.includes(this.currentMonth)) this.daysCount = 32\r\n      else if (this.currentYear%4 === 0) this.daysCount = 30\r\n      else this.daysCount = 29\r\n      this.days = [...Array(this.daysCount).keys()].slice(1)\r\n    },\r\n    createTimesArray(){\r\n      for (let i = 0; i < 25; i++){\r\n        let setTime = \"\"\r\n        // let hourArray = []\r\n        if (i.toString().length !== 2) setTime = \"0\"\r\n        this.timesArray.push(`${setTime}${i}:00`)\r\n        this.timesArray.push(`${setTime}${i}:30`)\r\n        // this.timesArray.push(hourArray)\r\n      }\r\n      this.timesArray.pop()\r\n      // console.log(this.timesArray)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.field {\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n}\r\n.window{\r\n  box-shadow: 0 3px 4px rgba(0,0,0,.25);\r\n  border-radius: 10px ;\r\n  &-table{\r\n    border-radius: 5px ;\r\n  }\r\n  &-onPage{\r\n    height: 550px;\r\n  }\r\n}\r\n.calendar {\r\n  height: 400px;\r\n  margin-top: 10px;\r\n  //margin-top: 10px;\r\n  //position: relative;\r\n  //width: 400px;\r\n  background-color: #fff;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n.calendar-month{\r\n  padding: 10px 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.grid-default{\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n.calendar-month-el{\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 1fr 1fr 90px 50px 1fr;\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n}\r\n.calendar-date {\r\n  padding: 0 20px 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-gap: 10px;\r\n  box-sizing: border-box;\r\n}\r\n.calendar-day {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 25px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #262626;\r\n  &:nth-child(7n){\r\n    color: #ff685d;\r\n  }\r\n}\r\n.calendar-number {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: #262626;\r\n  border-radius: 5px;\r\n  &-selected{\r\n    font-weight: 700;\r\n    background-color: #29239f;\r\n    color: aliceblue;\r\n  }\r\n  &:hover{\r\n    //background-color: #dadada;\r\n    border: 2px solid #23b24e;\r\n    cursor: pointer;\r\n  }\r\n  &:nth-child(7n){\r\n    color: #ff685d;\r\n  }\r\n  &-current{\r\n    color: #262626;\r\n    font-weight: 700;\r\n    //background-color: #23b24e;\r\n  }\r\n}\r\n.hidden-button{\r\n  background: inherit;\r\n  border: none;\r\n  //display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.content{\r\n  display: flex;\r\n  align-items: center;\r\n  &-center{\r\n    justify-content: center;\r\n  }\r\n  &-end{\r\n    justify-content: end;\r\n  }\r\n  &-start{\r\n    justify-content: start;\r\n  }\r\n}\r\n.name{\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin: 7px;\r\n}\r\n.camera:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\n.linear-table{\r\n  background: linear-gradient(rgba(223, 224, 255, 0.5) 50%, #ffffff 50%);\r\n  background-size: 100% 37px;\r\n  &-td{\r\n    font-size: 11px;\r\n    &:hover{\r\n      cursor: pointer;\r\n    }\r\n    &-painted {\r\n      background-color: var(--color) ;\r\n    //rgba(255, 230, 0, 0.25)\r\n    }\r\n  }\r\n}\r\n.scroll-table{\r\n  height: 480px;\r\n  overflow-x: auto;\r\n  margin-top: 5px;\r\n}\r\n.input-field{\r\n  outline: none;\r\n  width: 100px;\r\n  height: 25px;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 15px;\r\n  border-radius: 5px ;\r\n  border: 1px solid grey;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}