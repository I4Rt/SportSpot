{"ast":null,"code":"import { useVuelidate } from '@vuelidate/core';\nimport { required, minLength } from '@vuelidate/validators';\nexport default {\n  name: \"RegistrationPage\",\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      user: {\n        name: '',\n        surname: '',\n        login: '',\n        password: ''\n      }\n    };\n  },\n  validations: {\n    user: {\n      name: {\n        required\n      },\n      surname: {\n        required\n      },\n      login: {\n        required,\n        minLength: minLength(3)\n      },\n      password: {\n        required,\n        minLength: minLength(3)\n      }\n    }\n  },\n  methods: {\n    register() {\n      fetch('http://localhost:5000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({\n          'name': this.user.name,\n          \"surname\": this.user.surname,\n          \"login\": this.user.login,\n          \"password\": this.user.password\n        })\n      }).then(response => {\n        console.log(response.json());\n        this.$emit('registrationCompleted');\n      });\n    }\n  }\n};","map":{"version":3,"names":["useVuelidate","required","minLength","name","setup","v$","data","user","surname","login","password","validations","methods","register","fetch","method","headers","body","JSON","stringify","then","response","console","log","json","$emit"],"sources":["D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\RegistrationPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container login\">\r\n    <form @submit.prevent=\"register\">\r\n      <div class=\"form-group\">\r\n        <label>Имя: </label>\r\n        <input type=\"text\" v-model.trim=\"user.name\" class=\"form-control\"\r\n               :class=\"v$.user.name.$error ? 'is-invalid' : ''\">\r\n        <p v-if=\"v$.user.name.$dirty && v$.user.name.required.$invalid\" class=\"invalid-feedback\">\r\n          Обязательное поле\r\n        </p>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Фамилия: </label>\r\n        <input type=\"text\" v-model.trim=\"user.surname\" class=\"form-control\"\r\n               :class=\"v$.user.surname.$error ? 'is-invalid' : ''\">\r\n        <p v-if=\"v$.user.surname.$dirty && v$.user.surname.required.$invalid\" class=\"invalid-feedback\">\r\n          Обязательное поле\r\n        </p>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Логин: </label>\r\n        <input type=\"text\" v-model.trim=\"user.login\" class=\"form-control\"\r\n               :class=\"v$.user.login.$error ? 'is-invalid' : ''\">\r\n        <p v-if=\"v$.user.login.$dirty && v$.user.login.required.$invalid\" class=\"invalid-feedback\">\r\n          Обязательное поле\r\n        </p>\r\n        <p v-if=\"v$.user.login.$dirty && v$.user.login.minLength.$invalid\" class=\"invalid-feedback\">\r\n          Поле должно содержать минимум 3 символа\r\n        </p>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label >Пароль: </label>\r\n        <input type=\"password\" v-model.trim=\"user.password\" class=\"form-control\"\r\n               :class=\"v$.user.password.$error ? 'is-invalid' : ''\">\r\n        <p v-if=\"v$.user.password.$dirty && v$.user.password.required.$invalid\" class=\"invalid-feedback\">\r\n          Обязательное поле\r\n        </p>\r\n        <p v-if=\"v$.user.password.$dirty && v$.user.password.minLength.$invalid\" class=\"invalid-feedback\">\r\n          Поле должно содержать минимум 3 символа\r\n        </p>\r\n      </div >\r\n      <div class=\"row justify-content-around form-group\">\r\n        <button type=\"submit\" class=\"btn btn-primary col-auto\">Зарегистрироваться</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required, minLength } from '@vuelidate/validators'\r\n\r\nexport default {\r\n  name: \"RegistrationPage\",\r\n  setup () {\r\n    return {\r\n      v$: useVuelidate()\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      user: {\r\n        name: '',\r\n        surname: '',\r\n        login: '',\r\n        password: '',\r\n      }\r\n    }\r\n  },\r\n  validations: {\r\n    user: {\r\n      name: {required},\r\n      surname: {required},\r\n      login: { required, minLength: minLength(3) },\r\n      password: {required, minLength: minLength(3)},\r\n    }\r\n  },\r\n  methods: {\r\n    register() {\r\n      fetch('http://localhost:5000/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\r\n          'name': this.user.name,\r\n          \"surname\": this.user.surname,\r\n          \"login\" : this.user.login,\r\n          \"password\" : this.user.password})\r\n      })\r\n          .then((response) => {\r\n            console.log(response.json())\r\n            this.$emit('registrationCompleted')\r\n          });\r\n    },\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.login {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  margin-top: 40px;\r\n}\r\n.form-control {\r\n  width: 400px;\r\n}\r\n.form-group {\r\n  width: 400px;\r\n}\r\n</style>"],"mappings":"AAkDA,SAASA,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAQ,EAAEC,SAAQ,QAAS,uBAAsB;AAE1D,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAIA,CAAA,EAAK;IACP,OAAO;MACLC,EAAE,EAAEL,YAAY,CAAC;IACnB;EACF,CAAC;EACDM,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,IAAI,EAAE;QACJJ,IAAI,EAAE,EAAE;QACRK,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDC,WAAW,EAAE;IACXJ,IAAI,EAAE;MACJJ,IAAI,EAAE;QAACF;MAAQ,CAAC;MAChBO,OAAO,EAAE;QAACP;MAAQ,CAAC;MACnBQ,KAAK,EAAE;QAAER,QAAQ;QAAEC,SAAS,EAAEA,SAAS,CAAC,CAAC;MAAE,CAAC;MAC5CQ,QAAQ,EAAE;QAACT,QAAQ;QAAEC,SAAS,EAAEA,SAAS,CAAC,CAAC;MAAC;IAC9C;EACF,CAAC;EACDU,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACTC,KAAK,CAAC,gCAAgC,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,MAAM,EAAE,IAAI,CAACZ,IAAI,CAACJ,IAAI;UACtB,SAAS,EAAE,IAAI,CAACI,IAAI,CAACC,OAAO;UAC5B,OAAM,EAAI,IAAI,CAACD,IAAI,CAACE,KAAK;UACzB,UAAS,EAAI,IAAI,CAACF,IAAI,CAACG;QAAQ,CAAC;MACpC,CAAC,EACIU,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC3B,IAAI,CAACC,KAAK,CAAC,uBAAuB;MACpC,CAAC,CAAC;IACR;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}