{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7647fbb2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-around\"\n};\nconst _hoisted_3 = {\n  class: \"col-3\"\n};\nconst _hoisted_4 = {\n  class: \"row\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field\"\n}, \"Помещения\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-4\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field\"\n}, \"Добавить\")], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-5\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field\"\n}, \"Просмотр\")], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"col-3\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"room-name\"\n};\nconst _hoisted_11 = {\n  class: \"col-4 window\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  style: {\n    \"font-weight\": \"700\",\n    \"margin-top\": \"10px\"\n  }\n}, \"Помещение\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Название: \", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_16 = {\n  class: \"\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Класс помещения: \", -1 /* HOISTED */));\nconst _hoisted_18 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-success\"\n}, \"Сохранить\")], -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  style: {\n    \"font-weight\": \"700\"\n  }\n}, \"Сектора\", -1 /* HOISTED */));\nconst _hoisted_21 = {\n  key: 0,\n  class: \"row\"\n};\nconst _hoisted_22 = {\n  class: \"col-6\"\n};\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Назначенные\", -1 /* HOISTED */));\nconst _hoisted_24 = {\n  class: \"window linear-table\"\n};\nconst _hoisted_25 = {\n  style: {\n    \"width\": \"200px\"\n  }\n};\nconst _hoisted_26 = {\n  style: {\n    \"margin-left\": \"5px\"\n  }\n};\nconst _hoisted_27 = {\n  style: {\n    \"margin-left\": \"20px\"\n  }\n};\nconst _hoisted_28 = [\"onClick\"];\nconst _hoisted_29 = [\"src\"];\nconst _hoisted_30 = [\"onClick\"];\nconst _hoisted_31 = [\"src\"];\nconst _hoisted_32 = {\n  class: \"col-6\"\n};\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Существующие\", -1 /* HOISTED */));\nconst _hoisted_34 = {\n  class: \"window linear-table\"\n};\nconst _hoisted_35 = {\n  style: {\n    \"width\": \"200px\"\n  }\n};\nconst _hoisted_36 = {\n  style: {\n    \"margin-left\": \"5px\"\n  }\n};\nconst _hoisted_37 = {\n  style: {\n    \"margin-left\": \"20px\"\n  }\n};\nconst _hoisted_38 = [\"onClick\"];\nconst _hoisted_39 = [\"src\"];\nconst _hoisted_40 = [\"onClick\"];\nconst _hoisted_41 = [\"src\"];\nconst _hoisted_42 = {\n  key: 1,\n  style: {\n    \"font-size\": \"15px\"\n  }\n};\nconst _hoisted_43 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_44 = {\n  class: \"col-5\"\n};\nconst _hoisted_45 = {\n  class: \"col-12 window\"\n};\nconst _hoisted_46 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Изображение\", -1 /* HOISTED */));\nconst _hoisted_47 = [\"src\"];\nconst _hoisted_48 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Информация сектора\", -1 /* HOISTED */));\nconst _hoisted_49 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Техническая информация:\", -1 /* HOISTED */));\nconst _hoisted_50 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", null, \"Границы:\", -1 /* HOISTED */));\nconst _hoisted_51 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", null, \"Высота от пола:\", -1 /* HOISTED */));\nconst _hoisted_52 = {\n  key: 0\n};\nconst _hoisted_53 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Справка:\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"button\", {\n    id: \"add\",\n    style: {\n      \"margin-top\": \"5px\"\n    },\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.resetRoom && $options.resetRoom(...args))\n  }, \"Добавить\")])]), _hoisted_6, _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getRooms, (room, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"row window camera col-12\",\n      onClick: $event => $options.chooseRoom(room),\n      key: index\n    }, [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(room.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers($event => $options.selectFunction($options.save), [\"prevent\"])),\n    style: {\n      \"margin-top\": \"10px\"\n    }\n  }, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.room.name.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.room.name = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.room.name, void 0, {\n    trim: true\n  }]]), $setup.v$.room.name.$dirty && $setup.v$.room.name.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"input-field\", $setup.v$.room.classId.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.room.classId = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.room.classId, void 0, {\n    trim: true\n  }]]), $setup.v$.room.classId.$dirty && $setup.v$.room.classId.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_18, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _hoisted_19], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[4] || (_cache[4] = $event => {\n      _ctx.removeRoom($data.room.id);\n      $options.resetRoom();\n    }),\n    style: {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"right\": \"0\",\n      \"margin-right\": \"15px\",\n      \"margin-top\": \"116px\"\n    }\n  }, \" Удалить \"), _hoisted_20, $data.roomSelected ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_hoisted_23, _createElementVNode(\"table\", _hoisted_24, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getUsedCameras, (camera, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_25, [_createElementVNode(\"span\", _hoisted_26, _toDisplayString(camera.name), 1 /* TEXT */), _createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(camera.sectors, (sector, index) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: index\n      }, [_createElementVNode(\"td\", null, [_createElementVNode(\"span\", _hoisted_27, _toDisplayString(sector.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n        class: \"hidden-button swipe-sector\",\n        onClick: $event => $options.selectFunction($options.removeSectorFromRoom, sector)\n      }, [_createElementVNode(\"img\", {\n        src: require('../assets/icons/arrow-right.png'),\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_29)], 8 /* PROPS */, _hoisted_28), _createElementVNode(\"button\", {\n        class: \"hidden-button show-close-sector\",\n        onClick: $event => $options.chooseSector(sector)\n      }, [_createElementVNode(\"img\", {\n        src: require('../assets/icons/eye-closed.png'),\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_31)], 8 /* PROPS */, _hoisted_30)])]);\n    }), 128 /* KEYED_FRAGMENT */))])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_32, [_hoisted_33, _createElementVNode(\"table\", _hoisted_34, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getUnusedCameras, (camera, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_35, [_createElementVNode(\"span\", _hoisted_36, _toDisplayString(camera.name), 1 /* TEXT */), _createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(camera.sectors, (sector, index) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: index\n      }, [_createElementVNode(\"td\", null, [_createElementVNode(\"span\", _hoisted_37, _toDisplayString(sector.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n        class: \"hidden-button swipe-sector\",\n        onClick: $event => $options.selectFunction($options.setSectorToRoom, sector)\n      }, [_createElementVNode(\"img\", {\n        src: require('../assets/icons/arrow-left.png'),\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_39)], 8 /* PROPS */, _hoisted_38), _createElementVNode(\"button\", {\n        class: \"hidden-button show-close-sector\",\n        onClick: $event => $options.chooseSector(sector)\n      }, [_createElementVNode(\"img\", {\n        src: require('../assets/icons/eye-closed.png'),\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_41)], 8 /* PROPS */, _hoisted_40)])]);\n    }), 128 /* KEYED_FRAGMENT */))])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_42, \"Выберите помещение для отображение секторов\")), _hoisted_43]), _createElementVNode(\"div\", _hoisted_44, [_createElementVNode(\"div\", _hoisted_45, [_hoisted_46, _createCommentVNode(\"            <img src=\\\"http://localhost:5000/videoStream\\\" style=\\\"width: 100%\\\">\"), _createElementVNode(\"img\", {\n    src: require('../assets/images/img1.png'),\n    style: {\n      \"width\": \"100%\"\n    },\n    alt: \"img1\"\n  }, null, 8 /* PROPS */, _hoisted_47), _hoisted_48, _createElementVNode(\"p\", null, \"Сектор \" + _toDisplayString($data.sector.name), 1 /* TEXT */), _hoisted_49, _createElementVNode(\"ul\", null, [_hoisted_50, _hoisted_51, _createElementVNode(\"li\", null, [_createTextVNode(\"Тип сектора: \"), $data.sectorSelected ? (_openBlock(), _createElementBlock(\"span\", _hoisted_52, _toDisplayString(_ctx.getSectorTypeByID($data.sector.typeId).name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]), _hoisted_53])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","id","onClick","_cache","args","$options","resetRoom","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","_ctx","getRooms","room","index","$event","chooseRoom","key","_hoisted_10","_toDisplayString","name","_hoisted_11","_hoisted_12","onSubmit","_withModifiers","selectFunction","save","_hoisted_13","_hoisted_14","_normalizeClass","$setup","v$","$error","$data","$dirty","required","$invalid","_hoisted_15","_hoisted_16","_hoisted_17","classId","_hoisted_18","_hoisted_19","removeRoom","_hoisted_20","roomSelected","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","getUsedCameras","camera","_hoisted_25","_hoisted_26","sectors","sector","_hoisted_27","removeSectorFromRoom","src","require","alt","chooseSector","_hoisted_32","_hoisted_33","_hoisted_34","getUnusedCameras","_hoisted_35","_hoisted_36","_hoisted_37","setSectorToRoom","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_createCommentVNode","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","sectorSelected","_hoisted_52","getSectorTypeByID","typeId","_hoisted_53"],"sources":["C:\\Users\\Марков Владимир\\Documents\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\RoomsPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\" >\r\n      <div class=\"row justify-content-around\">\r\n        <div class=\"col-3\">\r\n          <div class=\"row\">\r\n            <label class=\"field\">Помещения</label>\r\n            <button id=\"add\" style=\"margin-top: 5px\" @click=\"resetRoom\">Добавить</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <label class=\"field\">Добавить</label>\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <label class=\"field\">Просмотр</label>\r\n        </div>\r\n        <div class=\"col-3\" >\r\n          <div class=\"row window camera col-12\" @click=\"chooseRoom(room)\" v-for=\"(room, index) in getRooms\"\r\n               :key=\"index\">\r\n            <span class=\"room-name\">{{room.name}}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-4 window\">\r\n          <label style=\"font-weight: 700; margin-top: 10px\">Помещение</label>\r\n          <form @submit.prevent=\"selectFunction(save)\" style=\"margin-top: 10px\">\r\n            <div class=\"\">\r\n              <label> Название: </label>\r\n              <input class=\" input-field\" type=\"text\" v-model.trim=\"room.name\"\r\n                     :class=\"v$.room.name.$error ? 'is-invalid' : ''\" >\r\n              <p v-if=\"v$.room.name.$dirty && v$.room.name.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"\">\r\n              <label> Класс помещения: </label>\r\n              <input class=\"input-field\" type=\"text\" v-model.trim=\"room.classId\"\r\n                     :class=\"v$.room.classId.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.room.classId.$dirty && v$.room.classId.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\" >\r\n              <button type=\"submit\" class=\"btn btn-success\" >Сохранить</button>\r\n            </div>\r\n          </form>\r\n          <button\r\n              class=\"btn btn-primary\"\r\n              @click=\"removeRoom(room.id); resetRoom()\"\r\n              style=\"position: absolute; top: 0; right: 0; margin-right: 15px; margin-top: 116px\">\r\n            Удалить\r\n          </button>\r\n\r\n          <label style=\"font-weight: 700\">Сектора</label>\r\n          <div class=\"row\" v-if=\"roomSelected\">\r\n            <div class=\"col-6\">\r\n              <label>Назначенные</label>\r\n              <table class=\"window linear-table\">\r\n                <tr  v-for=\"(camera, index) in getUsedCameras\" :key=\"index\">\r\n                  <td style=\"width: 200px\" >\r\n                    <span style=\"margin-left: 5px\">{{ camera.name }}</span>\r\n                    <table>\r\n                      <tr v-for=\"(sector, index) in camera.sectors\" :key=\"index\">\r\n                        <td>\r\n                          <span style=\"margin-left: 20px\">{{ sector.name }}</span>\r\n                          <button class=\"hidden-button swipe-sector\" @click=\"selectFunction(removeSectorFromRoom,sector)\">\r\n                            <img :src=\"require('../assets/icons/arrow-right.png')\" alt=\"\">\r\n                          </button>\r\n                          <button class=\"hidden-button show-close-sector\" @click=\"chooseSector(sector)\">\r\n                            <img :src=\"require('../assets/icons/eye-closed.png')\" alt=\"\">\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <label>Существующие</label>\r\n              <table class=\"window linear-table\" >\r\n                <tr v-for=\"(camera, index) in getUnusedCameras\" :key=\"index\">\r\n                  <td style=\"width: 200px\" >\r\n                    <span style=\"margin-left: 5px\">{{ camera.name }}</span>\r\n                    <table>\r\n                      <tr v-for=\"(sector, index) in camera.sectors\" :key=\"index\">\r\n                        <td>\r\n                          <span style=\"margin-left: 20px\">{{ sector.name }}</span>\r\n                          <button class=\"hidden-button swipe-sector\" @click=\"selectFunction(setSectorToRoom,sector)\">\r\n                            <img :src=\"require('../assets/icons/arrow-left.png')\" alt=\"\">\r\n                          </button>\r\n                          <button class=\"hidden-button show-close-sector\" @click=\"chooseSector(sector)\">\r\n                            <img :src=\"require('../assets/icons/eye-closed.png')\" alt=\"\">\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <p v-else style=\"font-size: 15px\">Выберите помещение для отображение секторов</p>\r\n          <br>\r\n        </div>\r\n        <div class=\"col-5\">\r\n          <div class=\"col-12 window\">\r\n            <p>Изображение</p>\r\n            <!--            <img src=\"http://localhost:5000/videoStream\" style=\"width: 100%\">-->\r\n            <img :src=\"require('../assets/images/img1.png')\" style=\"width: 100%\" alt=\"img1\">\r\n            <p>Информация сектора</p>\r\n            <p>Сектор {{sector.name}}</p>\r\n            <span>Техническая информация:</span>\r\n            <ul>\r\n              <li>Границы:</li>\r\n              <li>Высота от пола:</li>\r\n              <li>Тип сектора: <span v-if=\"sectorSelected\">{{getSectorTypeByID(sector.typeId).name}}</span></li>\r\n            </ul>\r\n            <p>Справка:</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex'\r\nimport {mapActions} from 'vuex'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required} from '@vuelidate/validators'\r\n\r\nexport default {\r\n  name: \"RoomsPage\",\r\n  setup () {\r\n    return {\r\n      v$: useVuelidate()\r\n    }\r\n  },\r\n  data(){\r\n    return {\r\n      room: {\r\n        id: null,\r\n        classId: null,\r\n        name: '',\r\n        sportObjectId: '',\r\n        roomType: {\r\n          id: null,\r\n          name: ''\r\n        }\r\n      },\r\n      sector: {\r\n        camId: null,\r\n        id: null,\r\n        name: '',\r\n        points: [],\r\n        roomId: null,\r\n        typeId: null,\r\n      },\r\n      roomSelected: false,\r\n      sectorSelected: false\r\n    }\r\n  },\r\n  validations: {\r\n    room: {\r\n      name: {required},\r\n      classId: {required}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n        'getRooms',\r\n        'getRoomByID',\r\n        'getUsedCameras',\r\n        'getUnusedCameras',\r\n        'getSectorByID',\r\n        'getSectorTypeByID',\r\n        'getSectorTypes',\r\n        \"getRefreshInterval\"\r\n    ]),\r\n  },\r\n  mounted() {\r\n    if (this.getRefreshInterval){\r\n      console.log('clean')\r\n      this.$store.commit('clearRefreshInterval')\r\n    }\r\n    if (this.getRooms.length === 0){\r\n      this.selectFunction(this.getRoomsFromDB)\r\n    }\r\n    if (this.getSectorTypes.length === 0){\r\n      this.selectFunction(this.getSectorTypesFromDB)\r\n    }\r\n  },\r\n  methods: {\r\n    save() {\r\n      this.v$.room.$touch()\r\n      let returnResult\r\n      if (!this.v$.room.$error) {\r\n        console.log('Валидация прошла успешно')\r\n        returnResult = fetch('http://localhost:5000/setRoom', {\r\n          credentials: \"include\",\r\n          method: 'POST',\r\n          cors: 'no-cors',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          body: JSON.stringify({\r\n            \"classId\": this.room.classId,\r\n            \"name\": this.room.name,\r\n            \"id\": null,\r\n          })\r\n          })\r\n            .then(response => response.json())\r\n            .then((response) => {\r\n              console.log(response)\r\n              this.room.id = response.id\r\n              console.log(this.$store.commit('setRooms', Object.assign({}, this.room)))\r\n              this.v$.room.$reset()\r\n              return response\r\n            });\r\n      }\r\n      else console.log('Валидация не прошла')\r\n      return returnResult\r\n    },\r\n    getSectorTypesFromDB() {\r\n      return fetch(`http://localhost:5000/getSectorTypes`, {\r\n        credentials: \"include\",\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log('sectorTypes ')\r\n            this.$store.state.sectorTypes = response\r\n            console.log(this.$store.state.sectorTypes)\r\n            return response\r\n          });\r\n    },\r\n    getUnusedCameraSectorsByRoomIdFromDB() {\r\n      return fetch(`http://localhost:5000/getUnusedCameraSectorsByRoomId?roomId=${this.room.id}`, {\r\n        credentials: \"include\",\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log('unused rooms ')\r\n            console.log(response)\r\n            this.$store.state.unusedCameras = response\r\n            console.log(this.getUnusedCameras)\r\n            return response\r\n          });\r\n    },\r\n    getUsedCameraSectorsByRoomIdFromDB() {\r\n      return fetch(`http://localhost:5000/getCameraSectorsByRoomId?roomId=${this.room.id}`, {\r\n        credentials: \"include\",\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log(response)\r\n            this.$store.state.usedCameras = response\r\n            return response\r\n          });\r\n    },\r\n    getRoomsFromDB() {\r\n      return fetch('http://localhost:5000/getRooms', {\r\n        credentials: \"include\",\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log(response)\r\n            this.$store.state.rooms = response\r\n            return response\r\n          });\r\n    },\r\n    chooseRoom(room) {\r\n      console.log(room.id)\r\n      this.room = this.getRoomByID(room.id)\r\n      this.roomSelected = true\r\n      this.reloadCameraSectors()\r\n      this.resetSector()\r\n    },\r\n    chooseSector(sector) {\r\n      console.log(sector)\r\n      console.log(sector.id)\r\n      this.sector = sector\r\n      this.sectorSelected = true\r\n    },\r\n    resetRoom(){\r\n      let roomCopy = Object.assign({}, this.room)\r\n      this.room = roomCopy\r\n      this.room.name = ''\r\n      this.room.classId = null\r\n      this.room.id = null\r\n      this.room.sportObjectId = ''\r\n      this.room.roomType = {\r\n        id: null,\r\n        name: ''\r\n      }\r\n      this.$store.state.unusedCameras = {}\r\n      this.$store.state.usedCameras = {}\r\n      this.resetSector()\r\n    },\r\n    resetSector() {\r\n      this.sector.camId = null\r\n      this.sector.id = null\r\n      this.sector.name = ''\r\n      this.sector.points = []\r\n      this.sector.roomId = null\r\n      this.sector.typeId = null\r\n      this.sectorSelected = false\r\n    },\r\n    reloadCameraSectors() {\r\n      this.selectFunction(this.getUsedCameraSectorsByRoomIdFromDB)\r\n      this.selectFunction(this.getUnusedCameraSectorsByRoomIdFromDB)\r\n    },\r\n    setSectorToRoom(sector){\r\n      return fetch(`http://localhost:5000/setSectorToRoom?sectorId=${sector.id}&roomId=${this.room.id}`, {\r\n        credentials: \"include\",\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log(response)\r\n            this.reloadCameraSectors()\r\n            return response\r\n          });\r\n    },\r\n    removeSectorFromRoom(sector){\r\n      return fetch(`http://localhost:5000/removeSectorFromRoomLsit?sectorId=${sector.id}&roomId=${this.room.id}`, {\r\n        credentials: \"include\",\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            console.log(response)\r\n            this.reloadCameraSectors()\r\n            return response\r\n          });\r\n    },\r\n    selectFunction(func, value){\r\n      let respFunc\r\n      if (arguments.length === 2) respFunc = func(value)\r\n      else respFunc = func()\r\n      let refresh\r\n      console.log('respFunc ' + respFunc)\r\n      if (respFunc === \"Bad token\") {\r\n        refresh = this.refreshToken()\r\n        if (refresh === \"ok\"){\r\n          console.log('refreshOk')\r\n          respFunc = func()\r\n        }\r\n        if (respFunc === \"Bad token\") alert('logout pls')\r\n      }\r\n      else return respFunc\r\n    },\r\n    ...mapActions([\r\n        'addRoom',\r\n        'removeRoom',\r\n        'refreshToken'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#add{\r\n  width: 110px;\r\n  /*height: 35px;*/\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  margin-right: 30px;\r\n  border-radius: 10px;\r\n  font-size: 18px;\r\n}\r\n.swipe-sector{\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 45px;\r\n  margin-bottom: 5px;\r\n}\r\n.show-close-sector{\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 20px;\r\n}\r\n.hidden-button{\r\n  background: inherit;\r\n  border: none;\r\n  width: 25px;\r\n  /*vertical-align: center;*/\r\n}\r\n.hidden-button:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\n.window{\r\n  box-shadow: 0 3px 4px rgba(0,0,0,.25);\r\n  border-radius: 10px ;\r\n}\r\n.camera:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\n.field {\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n}\r\n.room-name{\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin: 7px;\r\n}\r\n.input-field{\r\n  outline: none;\r\n  width: 200px;\r\n  height: 25px;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 15px;\r\n  border-radius: 5px ;\r\n  border: 1px solid grey;\r\n}\r\n.linear-table{\r\n  background: linear-gradient(#dfe0ff 50%, #ffffff 50%);\r\n  background-size: 100% 52px;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}