{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { mapActions } from 'vuex';\nimport { useVuelidate } from '@vuelidate/core';\nimport { required } from '@vuelidate/validators';\nexport default {\n  name: \"RoomsPage\"\n};","map":{"version":3,"names":["mapGetters","mapActions","useVuelidate","required","name"],"sources":["D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\RoomsPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\" >\r\n      <div class=\"row justify-content-around\">\r\n        <div class=\"col-2\" >\r\n          <div class=\"row camera\" v-for=\"(camera, index) in getCameras\"\r\n               :key=\"index\">\r\n            <label >{{camera.name}}</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4 form-group\">\r\n          <form @submit.prevent=\"saveCamera\">\r\n            <div class=\"form-group\">\r\n              <label> Название: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.name\"\r\n                     :class=\"v$.camera.name.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.name.$dirty && v$.camera.name.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> IP: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.IP\"\r\n                     :class=\"v$.camera.IP.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.IP.$dirty && v$.camera.IP.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Канал: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.channel\"\r\n                     :class=\"v$.camera.channel.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.channel.$dirty && v$.camera.channel.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Кодек: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.codec\"\r\n                     :class=\"v$.camera.codec.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.codec.$dirty && v$.camera.codec.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Логин: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.login\"\r\n                     :class=\"v$.camera.login.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.login.$dirty && v$.camera.login.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Пароль: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.password\"\r\n                     :class=\"v$.camera.password.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.password.$dirty && v$.camera.password.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"row form-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary\" >Сохранить камеру</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex'\r\nimport {mapActions} from 'vuex'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required} from '@vuelidate/validators'\r\n\r\n\r\nexport default {\r\n  name: \"RoomsPage\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAwEA,SAAQA,UAAU,QAAO,MAAK;AAC9B,SAAQC,UAAU,QAAO,MAAK;AAC9B,SAASC,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAQ,QAAO,uBAAsB;AAG9C,eAAe;EACbC,IAAI,EAAE;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}