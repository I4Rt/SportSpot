{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { createApp } from 'vue'\nimport { createStore } from 'vuex';\n// import axios from \"axios\";\n\nexport default createStore({\n  state() {\n    return {\n      cameraCount: 0,\n      roomCount: 0,\n      cameras: [],\n      rooms: [],\n      sectorTypes: ['ПОЛ', 'ЗЕРКАЛО']\n    };\n  },\n  mutations: {\n    setCameras(state, camera) {\n      state.cameras.push(camera);\n    },\n    removeCamera(state, id) {\n      state.cameras = state.cameras.filter(camera => camera.id !== id);\n    },\n    setRooms(state, room) {\n      state.rooms.push(room);\n    },\n    setCameraCount(state, cameraCount) {\n      state.cameraCount = cameraCount;\n    },\n    setRoomCount(state, roomCount) {\n      state.roomCount = roomCount;\n    }\n  },\n  actions: {\n    addCamera({\n      commit\n    }, newCamera) {\n      commit('setCameras', newCamera);\n    },\n    removeCamera({\n      commit\n    }, id) {\n      console.log('remove');\n      fetch(`http://localhost:5000/removeCamera?id=${id}`, {\n        method: 'GET',\n        cors: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        }\n      }).then(response => response.json()).then(response => {\n        if (response.OperationStatus === \"Done\") {\n          console.log(this.getCameraIndex(id));\n        }\n      });\n      commit('removeCamera', id);\n    },\n    addRoom({\n      commit\n    }, newRoom) {\n      commit('setRooms', newRoom);\n    },\n    addCameraCount({\n      commit\n    }, cameraCount) {\n      commit('setCameraCount', cameraCount);\n    },\n    addRoomCount({\n      commit\n    }, roomCount) {\n      commit('setRoomCount', roomCount);\n    }\n  },\n  getters: {\n    getCameras(state) {\n      return state.cameras;\n    },\n    getCameraByID: state => id => {\n      return state.cameras.find(camera => camera.id === id);\n    },\n    getCameraIndex: state => id => {\n      return state.cameras.findIndex(camera => camera.id === id);\n    },\n    getCamerasByRoomID: state => id => {\n      return state.cameras.filter(camera => camera.roomID === id);\n    },\n    getCamerasWithoutRoomID(state) {\n      return state.cameras.filter(camera => camera.roomID === -1);\n    },\n    getRooms(state) {\n      return state.rooms;\n    },\n    getRoomByID: state => id => {\n      return state.rooms.find(room => room.id === id);\n    },\n    getSectorTypes(state) {\n      return state.sectorTypes;\n    },\n    getCameraCount(state) {\n      return state.cameraCount;\n    },\n    getRoomCount(state) {\n      return state.roomCount;\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","cameraCount","roomCount","cameras","rooms","sectorTypes","mutations","setCameras","camera","push","removeCamera","id","filter","setRooms","room","setCameraCount","setRoomCount","actions","addCamera","commit","newCamera","console","log","fetch","method","cors","headers","then","response","json","OperationStatus","getCameraIndex","addRoom","newRoom","addCameraCount","addRoomCount","getters","getCameras","getCameraByID","find","findIndex","getCamerasByRoomID","roomID","getCamerasWithoutRoomID","getRooms","getRoomByID","getSectorTypes","getCameraCount","getRoomCount"],"sources":["D:/GitHub/SportSpot/UserFrontend/sport-spot-project/src/vuex/store.js"],"sourcesContent":["// import { createApp } from 'vue'\r\nimport { createStore } from 'vuex'\r\n// import axios from \"axios\";\r\n\r\nexport default createStore({\r\n    state () {\r\n        return {\r\n            cameraCount: 0,\r\n            roomCount: 0,\r\n            cameras: [],\r\n            rooms: [],\r\n            sectorTypes: ['ПОЛ', 'ЗЕРКАЛО']\r\n        }\r\n    },\r\n    mutations: {\r\n        setCameras (state, camera) {\r\n            state.cameras.push(camera)\r\n        },\r\n        removeCamera (state, id) {\r\n            state.cameras = state.cameras.filter((camera) => camera.id !== id)\r\n        },\r\n        setRooms (state, room) {\r\n            state.rooms.push(room)\r\n        },\r\n        setCameraCount (state, cameraCount) {\r\n            state.cameraCount = cameraCount\r\n        },\r\n        setRoomCount (state, roomCount) {\r\n            state.roomCount = roomCount\r\n        }\r\n    },\r\n    actions: {\r\n        addCamera({commit}, newCamera) {\r\n            commit('setCameras', newCamera)\r\n        },\r\n        removeCamera({commit}, id) {\r\n            console.log('remove')\r\n            fetch(`http://localhost:5000/removeCamera?id=${id}`, {\r\n                method: 'GET',\r\n                cors: 'no-cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8',\r\n                },\r\n            })\r\n                .then(response => response.json())\r\n                .then((response) => {\r\n                    if (response.OperationStatus === \"Done\"){\r\n                        console.log(this.getCameraIndex(id))\r\n                    }\r\n                })\r\n            commit('removeCamera', id)\r\n        },\r\n        addRoom({commit}, newRoom) {\r\n            commit('setRooms', newRoom)\r\n        },\r\n        addCameraCount({commit}, cameraCount) {\r\n            commit('setCameraCount', cameraCount)\r\n        },\r\n        addRoomCount({commit}, roomCount) {\r\n            commit('setRoomCount', roomCount)\r\n        }\r\n    },\r\n    getters: {\r\n        getCameras(state) {\r\n            return state.cameras\r\n        },\r\n        getCameraByID: (state) => (id) => {\r\n            return state.cameras.find(camera => camera.id === id)\r\n        },\r\n        getCameraIndex: (state) => (id) => {\r\n            return state.cameras.findIndex(camera => camera.id === id)\r\n        },\r\n        getCamerasByRoomID: (state) => (id) => {\r\n          return state.cameras.filter(camera => camera.roomID === id)\r\n        },\r\n        getCamerasWithoutRoomID (state) {\r\n            return state.cameras.filter(camera => camera.roomID === -1)\r\n        },\r\n        getRooms(state) {\r\n            return state.rooms\r\n        },\r\n        getRoomByID: (state) => (id) => {\r\n            return state.rooms.find(room => room.id === id)\r\n        },\r\n        getSectorTypes(state) {\r\n            return state.sectorTypes\r\n        },\r\n        getCameraCount(state) {\r\n            return state.cameraCount\r\n        },\r\n        getRoomCount(state) {\r\n            return state.roomCount\r\n        }\r\n    }\r\n})\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}