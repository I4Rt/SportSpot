{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { createApp } from 'vue'\nimport { createStore } from 'vuex';\n// import axios from \"axios\";\n\nexport default createStore({\n  state() {\n    return {\n      cameraCount: 0,\n      roomCount: 0,\n      cameras: [],\n      rooms: [],\n      sectorTypes: ['ПОЛ', 'ЗЕРКАЛО']\n    };\n  },\n  mutations: {\n    setCameras(state, camera) {\n      state.cameras.push(camera);\n    },\n    removeCamera(state, index) {\n      state.cameras.slice(index, 1);\n    },\n    setRooms(state, room) {\n      state.rooms.push(room);\n    },\n    setCameraCount(state, cameraCount) {\n      state.cameraCount = cameraCount;\n    },\n    setRoomCount(state, roomCount) {\n      state.roomCount = roomCount;\n    }\n  },\n  actions: {\n    addCamera({\n      commit\n    }, newCamera) {\n      commit('setCameras', newCamera);\n    },\n    removeCameraFromVuex({\n      commit\n    }, index) {\n      commit('removeCamera', index);\n    },\n    addRoom({\n      commit\n    }, newRoom) {\n      commit('setRooms', newRoom);\n    },\n    addCameraCount({\n      commit\n    }, cameraCount) {\n      commit('setCameraCount', cameraCount);\n    },\n    addRoomCount({\n      commit\n    }, roomCount) {\n      commit('setRoomCount', roomCount);\n    }\n  },\n  getters: {\n    getCameras(state) {\n      return state.cameras;\n    },\n    getCameraByID: state => id => {\n      return state.cameras.find(camera => camera.id === id);\n    },\n    getCameraIndex: state => id => {\n      return state.cameras.findIndex(camera => camera.id === id);\n    },\n    getCamerasByRoomID: state => id => {\n      return state.cameras.filter(camera => camera.roomID === id);\n    },\n    getCamerasWithoutRoomID(state) {\n      return state.cameras.filter(camera => camera.roomID === -1);\n    },\n    getRooms(state) {\n      return state.rooms;\n    },\n    getRoomByID: state => id => {\n      return state.rooms.find(room => room.id === id);\n    },\n    getSectorTypes(state) {\n      return state.sectorTypes;\n    },\n    getCameraCount(state) {\n      return state.cameraCount;\n    },\n    getRoomCount(state) {\n      return state.roomCount;\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","cameraCount","roomCount","cameras","rooms","sectorTypes","mutations","setCameras","camera","push","removeCamera","index","slice","setRooms","room","setCameraCount","setRoomCount","actions","addCamera","commit","newCamera","removeCameraFromVuex","addRoom","newRoom","addCameraCount","addRoomCount","getters","getCameras","getCameraByID","id","find","getCameraIndex","findIndex","getCamerasByRoomID","filter","roomID","getCamerasWithoutRoomID","getRooms","getRoomByID","getSectorTypes","getCameraCount","getRoomCount"],"sources":["D:/GitHub/SportSpot/UserFrontend/sport-spot-project/src/vuex/store.js"],"sourcesContent":["// import { createApp } from 'vue'\r\nimport { createStore } from 'vuex'\r\n// import axios from \"axios\";\r\n\r\nexport default createStore({\r\n    state () {\r\n        return {\r\n            cameraCount: 0,\r\n            roomCount: 0,\r\n            cameras: [],\r\n            rooms: [],\r\n            sectorTypes: ['ПОЛ', 'ЗЕРКАЛО']\r\n        }\r\n    },\r\n    mutations: {\r\n        setCameras (state, camera) {\r\n            state.cameras.push(camera)\r\n        },\r\n        removeCamera (state, index) {\r\n            state.cameras.slice(index, 1)\r\n        },\r\n\r\n        setRooms (state, room) {\r\n            state.rooms.push(room)\r\n        },\r\n        setCameraCount (state, cameraCount) {\r\n            state.cameraCount = cameraCount\r\n        },\r\n        setRoomCount (state, roomCount) {\r\n            state.roomCount = roomCount\r\n        }\r\n    },\r\n    actions: {\r\n        addCamera({commit}, newCamera) {\r\n            commit('setCameras', newCamera)\r\n        },\r\n        removeCameraFromVuex({commit}, index) {\r\n            commit('removeCamera', index)\r\n        },\r\n        addRoom({commit}, newRoom) {\r\n            commit('setRooms', newRoom)\r\n        },\r\n        addCameraCount({commit}, cameraCount) {\r\n            commit('setCameraCount', cameraCount)\r\n        },\r\n        addRoomCount({commit}, roomCount) {\r\n            commit('setRoomCount', roomCount)\r\n        }\r\n    },\r\n    getters: {\r\n        getCameras(state) {\r\n            return state.cameras\r\n        },\r\n        getCameraByID: (state) => (id) => {\r\n            return state.cameras.find(camera => camera.id === id)\r\n        },\r\n        getCameraIndex: (state) => (id) => {\r\n            return state.cameras.findIndex(camera => camera.id === id)\r\n        },\r\n        getCamerasByRoomID: (state) => (id) => {\r\n          return state.cameras.filter(camera => camera.roomID === id)\r\n        },\r\n        getCamerasWithoutRoomID (state) {\r\n            return state.cameras.filter(camera => camera.roomID === -1)\r\n        },\r\n        getRooms(state) {\r\n            return state.rooms\r\n        },\r\n        getRoomByID: (state) => (id) => {\r\n            return state.rooms.find(room => room.id === id)\r\n        },\r\n        getSectorTypes(state) {\r\n            return state.sectorTypes\r\n        },\r\n        getCameraCount(state) {\r\n            return state.cameraCount\r\n        },\r\n        getRoomCount(state) {\r\n            return state.roomCount\r\n        }\r\n    }\r\n})\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}