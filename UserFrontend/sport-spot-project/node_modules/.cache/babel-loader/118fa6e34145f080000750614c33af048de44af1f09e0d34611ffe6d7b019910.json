{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e4fe0dc6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row show-cameras\"\n};\nconst _hoisted_3 = {\n  class: \"col-6 form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Название: \", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" IP: \", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Канал: \", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_13 = {\n  class: \"form-group\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Кодек: \", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Логин: \", -1 /* HOISTED */));\nconst _hoisted_18 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_19 = {\n  class: \"form-group\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \" Пароль: \", -1 /* HOISTED */));\nconst _hoisted_21 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row form-group\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Сохранить камеру\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getCameras, (camera, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col\",\n      key: index\n    }, _toDisplayString(camera), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.saveCamera && $options.saveCamera(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"form-control\", $setup.v$.camera.name.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.camera.name = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.name, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.name.$dirty && $setup.v$.camera.name.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"form-control\", $setup.v$.camera.IP.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.camera.IP = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.IP, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.IP.$dirty && $setup.v$.camera.IP.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"form-control\", $setup.v$.camera.channel.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.camera.channel = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.channel, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.channel.$dirty && $setup.v$.camera.channel.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"form-control\", $setup.v$.camera.codec.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.camera.codec = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.codec, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.codec.$dirty && $setup.v$.camera.codec.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"form-control\", $setup.v$.camera.login.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.camera.login = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.login, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.login.$dirty && $setup.v$.camera.login.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_18, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _withDirectives(_createElementVNode(\"input\", {\n    class: _normalizeClass([\"form-control\", $setup.v$.camera.password.$error ? 'is-invalid' : '']),\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.camera.password = $event)\n  }, null, 2 /* CLASS */), [[_vModelText, $data.camera.password, void 0, {\n    trim: true\n  }]]), $setup.v$.camera.password.$dirty && $setup.v$.camera.password.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_21, \" Обязательное поле \")) : _createCommentVNode(\"v-if\", true)]), _hoisted_22], 32 /* HYDRATE_EVENTS */)])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","getCameras","camera","index","key","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","saveCamera","_hoisted_4","_hoisted_5","_normalizeClass","$setup","v$","name","$error","$data","$event","$dirty","required","$invalid","_hoisted_6","_hoisted_7","_hoisted_8","IP","_hoisted_9","_hoisted_10","_hoisted_11","channel","_hoisted_12","_hoisted_13","_hoisted_14","codec","_hoisted_15","_hoisted_16","_hoisted_17","login","_hoisted_18","_hoisted_19","_hoisted_20","password","_hoisted_21","_hoisted_22"],"sources":["D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CamerasPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\" >\r\n      <div class=\"row show-cameras\">\r\n        <div class=\"col\" v-for=\"(camera, index) in getCameras\"\r\n             :key=\"index\">\r\n          {{camera}}\r\n        </div>\r\n        <div class=\"col-6 form-group\">\r\n          <form @submit.prevent=\"saveCamera\">\r\n            <div class=\"form-group\">\r\n              <label> Название: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.name\"\r\n                     :class=\"v$.camera.name.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.name.$dirty && v$.camera.name.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> IP: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.IP\"\r\n                     :class=\"v$.camera.IP.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.IP.$dirty && v$.camera.IP.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Канал: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.channel\"\r\n                     :class=\"v$.camera.channel.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.channel.$dirty && v$.camera.channel.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Кодек: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.codec\"\r\n                     :class=\"v$.camera.codec.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.codec.$dirty && v$.camera.codec.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Логин: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.login\"\r\n                     :class=\"v$.camera.login.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.login.$dirty && v$.camera.login.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label> Пароль: </label>\r\n              <input class=\"form-control\" type=\"text\" v-model.trim=\"camera.password\"\r\n                     :class=\"v$.camera.password.$error ? 'is-invalid' : ''\">\r\n              <p v-if=\"v$.camera.password.$dirty && v$.camera.password.required.$invalid\" class=\"invalid-feedback\">\r\n                Обязательное поле\r\n              </p>\r\n            </div>\r\n            <div class=\"row form-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary\" >Сохранить камеру</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex'\r\nimport {mapActions} from 'vuex'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required} from '@vuelidate/validators'\r\n\r\nexport default {\r\n  name: \"CamerasPage\",\r\n  setup () {\r\n    return {\r\n      v$: useVuelidate()\r\n    }\r\n  },\r\n  data(){\r\n    return {\r\n      camera: {\r\n        name: '',\r\n        IP: '',\r\n        channel : '',\r\n        codec : '',\r\n        login : '',\r\n        password : ''\r\n      }\r\n    }\r\n  },\r\n  validations: {\r\n    camera: {\r\n      name: {required},\r\n      IP: {required},\r\n      channel: {required},\r\n      codec: {required},\r\n      login: { required },\r\n      password: {required},\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n        'getCameras'\r\n    ]),\r\n  },\r\n  methods: {\r\n    saveCamera() {\r\n      this.v$.camera.$touch()\r\n      if (!this.v$.camera.$error) {\r\n        console.log('Валидация прошла успешно')\r\n        this.addCamera(this.camera)\r\n      }\r\n      else console.log('Валидация не прошла')\r\n    },\r\n    ...mapActions([\r\n      'addCamera'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*.show-cameras{*/\r\n/*  !*width: 200px;*!*/\r\n/*}*/\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}