{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from 'vuex';\nimport { useVuelidate } from '@vuelidate/core';\nimport { integer, required } from \"@vuelidate/validators\";\nexport default {\n  name: \"CalendarPage\",\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      task: {\n        id: null,\n        name: '',\n        comment: '',\n        roomId: null,\n        targetCount: null,\n        begin: '',\n        end: '',\n        color: this.randomHex().slice(0, 7),\n        timesArray: ''\n      },\n      // generatedColor: this.randomHex(),\n\n      indexStart: null,\n      indexEnd: null,\n      indexSelected: null,\n      onMousedown: false,\n      timesArray: [],\n      busyTimesArray: [],\n      roomSelected: false,\n      taskSelected: false,\n      roomSelectedId: null,\n      canChangeTimesArray: true,\n      prevCalendarIndex: null,\n      selectedDay: '',\n      daysCount: 32,\n      alphaChannel: '',\n      currentMonth: new Date().getMonth(),\n      currentYear: new Date().getFullYear(),\n      calendarMonths30: [3, 5, 8, 10],\n      calendarMonths31: [0, 2, 4, 6, 7, 9, 11],\n      calendarMonths: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n      calendarDays: ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'],\n      days: null,\n      missedDays: null\n    };\n  },\n  validations: {\n    task: {\n      name: {\n        required\n      },\n      targetCount: {\n        required,\n        integer\n      },\n      timesArray: {\n        required\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['getRooms', 'getTasks', 'getTaskByID', 'getRefreshInterval'])\n  },\n  mounted() {\n    if (this.getRefreshInterval) {\n      console.log('clean');\n      this.$store.commit('clearRefreshInterval');\n    }\n    this.setCorrectMonth().then(value => {\n      console.log(value);\n      let date = new Date();\n      if (this.currentMonth === date.getMonth() && this.currentYear === date.getFullYear()) console.log('1');\n      try {\n        document.getElementById((date.getDate() - 1).toString()).classList.add('calendar-number-current');\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    this.selectFunction(this.getRoomsFromDB);\n    this.createTimesArray();\n  },\n  methods: {\n    save(saveTask) {\n      let task = this.task;\n      if (arguments.length === 1) task = saveTask;else this.v$.task.$touch();\n      let returnResult;\n      console.log('save');\n      if (new Date(this.selectedDay + ' ' + this.indexStart + ':00') < new Date()) alert(\"\");else if (this.task.timesArray.length >= 2) {\n        if (!this.v$.task.$error) {\n          fetch('http://localhost:5000/setTask', {\n            credentials: \"include\",\n            method: 'POST',\n            cors: 'no-cors',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n              \"id\": task.id,\n              \"name\": task.name,\n              \"comment\": task.comment,\n              \"roomId\": this.roomSelectedId,\n              \"targetCount\": task.targetCount,\n              \"begin\": `${this.selectedDay} ${task.timesArray[0]}:00`,\n              \"end\": `${this.selectedDay} ${task.timesArray[task.timesArray.length - 1]}:00`,\n              \"color\": task.color\n            })\n          }).then(response => response.json()).then(response => {\n            console.log(response);\n            returnResult = response;\n            this.task.id = response.id;\n            if (this.getTaskByID(this.task.id) === undefined) this.$store.commit('setTask', Object.assign({}, this.task));\n            this.repaintTimesArray(task.timesArray, task.color + this.alphaChannel).then(value => {\n              console.log(value);\n              this.resetTask();\n            });\n            // this.resetTask().then((value) =>{\n            //       console.log(value)\n            //       this.paintTimesArray(task.timesArray)\n            //     }\n            // )\n          });\n        }\n      } else alert(\"Выберите диапазон времени более одного значения\");\n      return returnResult;\n    },\n    getRoomsFromDB() {\n      let returnResult;\n      fetch('http://localhost:5000/getRooms', {\n        credentials: \"include\",\n        method: 'GET',\n        cors: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        }\n      }).then(response => response.json()).then(response => {\n        returnResult = response;\n        console.log('resp ' + response);\n        this.$store.state.rooms = response;\n      });\n      // console.log(returnResult)\n      return returnResult;\n    },\n    getTasksFromDB() {\n      let returnResult;\n      fetch('http://localhost:5000/getTasks', {\n        credentials: \"include\",\n        method: 'POST',\n        // cors: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({\n          \"date\": this.selectedDay\n        })\n      }).then(response => response.json()).then(response => {\n        returnResult = response;\n        console.log(this.selectedDay);\n        console.log(response);\n        this.$store.state.tasks = response;\n        console.log(this.randomHex());\n        for (let task of this.getTasks) {\n          let indexStart = this.getTimeIndex(task.begin);\n          let indexEnd = this.getTimeIndex(task.end);\n          task.timesArray = this.$data.timesArray.slice(indexStart, indexEnd + 1);\n          // console.log('sliceArray ' + indexStart, indexEnd)\n          // let color = this.randomHex()\n          // task.color = color.slice(0, 7)\n          this.paintTimesArray(task.timesArray, task.color + this.alphaChannel);\n          for (let time of task.timesArray) {\n            this.busyTimesArray.push(time);\n          }\n        }\n      });\n      return returnResult;\n    },\n    chooseTask(task) {\n      console.log('choose');\n      // this.resetTask()\n      this.canChangeTimesArray = false;\n      this.task = task;\n      this.taskSelected = true;\n      this.paintTimesArray(this.task.timesArray, this.task.color + this.alphaChannel);\n    },\n    async resetTask() {\n      let taskCopy = Object.assign({}, this.task);\n      this.task = taskCopy;\n      this.task.id = null;\n      this.task.name = '';\n      this.task.comment = '';\n      this.task.roomId = this.roomSelectedId;\n      this.task.targetCount = null;\n      this.task.begin = '';\n      this.task.end = '';\n      this.task.color = this.randomHex().slice(0, 7);\n      this.task.timesArray = '';\n      this.taskSelected = false;\n      this.v$.task.$reset();\n      this.indexEnd = '';\n      this.indexStart = '';\n      this.canChangeTimesArray = true;\n      this.paintTimesArray(this.task.timesArray, '#ffffff66');\n      return 0;\n    },\n    getTimeIndex(time) {\n      let getTime = new Date(time);\n      let date = `${getTime.getHours().toString().length === 1 ? \"0\" : \"\"}${getTime.getHours()}:${getTime.getMinutes().toString().length === 1 ? \"0\" : \"\"}${getTime.getMinutes()}`;\n      // console.log('date ' + date)\n      return this.timesArray.indexOf(date);\n    },\n    randomHex() {\n      this.alphaChannel = Math.round(0.4 * 255).toString(16);\n      let color = Math.floor(Math.random() * 16777215).toString(16);\n      color = color.length === 6 ? color : color + \"0\";\n      console.log('a: ' + this.alphaChannel + \" \" + color);\n      return `#${color}${this.alphaChannel}`;\n    },\n    setIndices(index) {\n      if (this.canChangeTimesArray === false) return 1;\n      let indexStart = null;\n      let indexEnd = null;\n      if (index < this.indexSelected) {\n        indexEnd = this.$data.indexSelected;\n        indexStart = index;\n      } else {\n        indexStart = this.indexSelected;\n        indexEnd = index;\n      }\n      let sliceArray = this.$data.timesArray.slice(indexStart, indexEnd + 1);\n      let includesBusyTime = false;\n      for (let time of sliceArray) {\n        if (this.busyTimesArray.includes(time)) includesBusyTime = true;\n      }\n      if (this.onMousedown === true && !includesBusyTime) this.paintTimesArray(sliceArray);\n    },\n    async repaintTimesArray(timesArray, color) {\n      this.clearTimesArray(timesArray);\n      this.paintTimesArray(timesArray, color).then(value => {\n        console.log(value);\n        this.setBusyTimeArray(timesArray).then(value => {\n          console.log(value);\n          this.task.timesArray = [];\n        });\n      });\n      return 'repaintTimesArray';\n    },\n    async paintTimesArray(sliceArray, selectedColor) {\n      console.log('newPaint');\n      let color = this.task.color + this.alphaChannel;\n      // console.log(color)\n      if (arguments.length === 2) color = selectedColor;else this.task.color = color.slice(0, 7);\n      for (let i of this.timesArray) {\n        if (!this.busyTimesArray.includes(i)) {\n          if (sliceArray.includes(i)) {\n            // console.log('include ' + i)\n            document.getElementById(i).style.setProperty('--color', color);\n            document.getElementById(i).classList.add('linear-table-td-painted');\n            // document.getElementById(i).classList.add(`task-${}`)\n          } else {\n            document.getElementById(i).classList.remove('linear-table-td-painted');\n          }\n          this.indexStart = sliceArray[0];\n          this.indexEnd = sliceArray[sliceArray.length - 1];\n          this.task.timesArray = sliceArray;\n        }\n      }\n      return 'paintTimesArray';\n    },\n    clearTimesArray(timesArray) {\n      for (let i of timesArray) {\n        if (this.busyTimesArray.includes(i)) this.busyTimesArray = this.busyTimesArray.filter(time => time !== i);\n        document.getElementById(i).classList.remove('linear-table-td-painted');\n      }\n    },\n    async setBusyTimeArray(timesArray) {\n      for (let time of timesArray) {\n        this.busyTimesArray.push(time);\n      }\n      return 'setBusyTimeArray';\n    },\n    chooseMonth(value) {\n      if (value === 'back') {\n        if (this.currentMonth === 0) {\n          this.currentMonth = 11;\n          this.currentYear -= 1;\n        } else this.currentMonth -= 1;\n      } else if (value === 'next') {\n        if (this.currentMonth === 11) {\n          this.currentMonth = 0;\n          this.currentYear += 1;\n        } else this.currentMonth += 1;\n      }\n      this.setCorrectMonth();\n\n      // document.getElementById((parseInt(day) - 1).toString()).classList.add('calendar-number-selected')\n    },\n\n    chooseDay(day, index) {\n      let monthStr = this.currentMonth + 1;\n      if (day.toString().length !== 2) day = `0${day}`;\n      if (monthStr.toString().length !== 2) monthStr = `0${monthStr}`;\n      this.selectedDay = `${monthStr}/${day}/${this.currentYear}`;\n      console.log(index + ' ' + this.prevCalendarIndex);\n      document.getElementById(index).classList.add('calendar-number-selected');\n      if (this.prevCalendarIndex !== null && this.prevCalendarIndex !== index) if (document.getElementById(this.prevCalendarIndex).classList.length !== 0) {\n        console.log('remove');\n        document.getElementById(this.prevCalendarIndex).classList.remove('calendar-number-selected');\n      }\n      this.prevCalendarIndex = index;\n      if (this.roomSelected) {\n        this.resetTask();\n        this.busyTimesArray = [];\n        for (let i of this.timesArray) document.getElementById(i).classList.remove('linear-table-td-painted');\n        this.selectFunction(this.getTasksFromDB);\n      }\n    },\n    chooseRoom(room) {\n      this.roomSelected = true;\n      this.roomSelectedId = room.id;\n      console.log(this.selectedDay);\n      console.log(room);\n      this.selectFunction(this.getTasksFromDB);\n    },\n    getCurrentDay() {\n      let curDay = new Date();\n      this.currentMonth = curDay.getMonth();\n      this.currentYear = curDay.getFullYear();\n      this.setCorrectMonth();\n    },\n    async setCorrectMonth() {\n      let curDay = new Date();\n      curDay.get;\n      curDay.setDate(1);\n      curDay.setMonth(this.currentMonth);\n      curDay.setFullYear(this.currentYear);\n      let day = curDay.getDay();\n      if (day === 0) this.missedDays = [...Array(6)];else this.missedDays = [...Array(day - 1)];\n      if (this.calendarMonths30.includes(this.currentMonth)) this.daysCount = 31;else if (this.calendarMonths31.includes(this.currentMonth)) this.daysCount = 32;else if (this.currentYear % 4 === 0) this.daysCount = 30;else this.daysCount = 29;\n      this.days = [...Array(this.daysCount).keys()].slice(1);\n      return 'setCorrectMonth';\n    },\n    createTimesArray() {\n      for (let i = 0; i < 25; i++) {\n        let setTime = \"\";\n        // let hourArray = []\n        if (i.toString().length !== 2) setTime = \"0\";\n        this.timesArray.push(`${setTime}${i}:00`);\n        this.timesArray.push(`${setTime}${i}:30`);\n        // this.timesArray.push(hourArray)\n      }\n\n      this.timesArray.pop();\n      // console.log(this.timesArray)\n    },\n\n    selectFunction(func) {\n      let respFunc = func();\n      let refresh;\n      console.log('respFunc ' + respFunc);\n      if (respFunc === \"Bad token\") {\n        refresh = this.refreshToken();\n        if (refresh === \"ok\") {\n          console.log('refreshOk');\n          respFunc = func();\n        }\n        if (respFunc === \"Bad token\") alert('logout pls');\n      } else return \"ok\";\n    },\n    ...mapActions(['removeTask', 'refreshToken'])\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","useVuelidate","integer","required","name","setup","v$","data","task","id","comment","roomId","targetCount","begin","end","color","randomHex","slice","timesArray","indexStart","indexEnd","indexSelected","onMousedown","busyTimesArray","roomSelected","taskSelected","roomSelectedId","canChangeTimesArray","prevCalendarIndex","selectedDay","daysCount","alphaChannel","currentMonth","Date","getMonth","currentYear","getFullYear","calendarMonths30","calendarMonths31","calendarMonths","calendarDays","days","missedDays","validations","computed","mounted","getRefreshInterval","console","log","$store","commit","setCorrectMonth","then","value","date","document","getElementById","getDate","toString","classList","add","err","selectFunction","getRoomsFromDB","createTimesArray","methods","save","saveTask","arguments","length","$touch","returnResult","alert","$error","fetch","credentials","method","cors","headers","body","JSON","stringify","response","json","getTaskByID","undefined","Object","assign","repaintTimesArray","resetTask","state","rooms","getTasksFromDB","tasks","getTasks","getTimeIndex","$data","paintTimesArray","time","push","chooseTask","taskCopy","$reset","getTime","getHours","getMinutes","indexOf","Math","round","floor","random","setIndices","index","sliceArray","includesBusyTime","includes","clearTimesArray","setBusyTimeArray","selectedColor","i","style","setProperty","remove","filter","chooseMonth","chooseDay","day","monthStr","chooseRoom","room","getCurrentDay","curDay","get","setDate","setMonth","setFullYear","getDay","Array","keys","setTime","pop","func","respFunc","refresh","refreshToken"],"sources":["D:\\GitHub\\SportSpot\\UserFrontend\\sport-spot-project\\src\\components\\CalendarPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\" @mouseup=\"onMousedown=false\">\r\n      <div class=\"row justify-content-around\">\r\n      <div class=\"col-6\">\r\n        <label class=\"field\">Календарь</label>\r\n      </div>\r\n        <div class=\"col-6\">\r\n          <label v-if=\"!roomSelected\" class=\"field\">Помещения</label>\r\n          <label v-if=\"roomSelected\" class=\"field\">\r\n            Помещение 1 {{`${this.selectedDay.substr(3, 2)}/${this.selectedDay.substr(0, 2)}/${this.selectedDay.substr(6, 4)}`}}\r\n          </label>\r\n        </div>\r\n      <div class=\"col-6 \" >\r\n        <div class=\"col-12 window window-onPage\" style=\"display: flow-root\">\r\n          <div  class=\"calendar window\">\r\n            <div class=\"calendar-month\">\r\n              <div class=\"calendar-month-el\">\r\n                <button @click=\"chooseMonth('back')\" class=\"hidden-button\">\r\n                  <img  :src=\"require('../assets/icons/back.png')\" alt=\"\">\r\n                </button>\r\n                <button @click=\"chooseMonth('next')\" class=\"hidden-button\" >\r\n                  <img  :src=\"require('../assets/icons/next.png')\" alt=\"\">\r\n                </button>\r\n                <div class=\"content content-center\"> {{calendarMonths[currentMonth]}} </div>\r\n                <div class=\"content content-start\"> {{currentYear}} </div>\r\n                <button @click=\"getCurrentDay\" class=\"hidden-button\" title=\"К сегодняшнему дню\">\r\n                  <img  :src=\"require('../assets/icons/today24px.png')\" alt=\"\">\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"calendar-date\">\r\n              <div\r\n                  class=\"calendar-day\"\r\n                  v-for=\"(calendarDay, index) in calendarDays\"\r\n                  :key=\"index\">\r\n                {{calendarDay}}\r\n              </div>\r\n              <div class=\"calendar-number\" v-for=\"(index) in missedDays\" :key=\"index\"></div>\r\n              <div\r\n                  @click=\"chooseDay(day, index)\"\r\n                  class=\"calendar-number\"\r\n                  v-for=\"(day, index) in days\"\r\n                  :key=\"index\"\r\n                  :id=\"index\">\r\n                {{day}}\r\n              </div>\r\n<!--              <div class=\"calendar-number\">1</div>-->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\" >\r\n        <div class=\"col-12 window window-onPage\">\r\n          <div v-if=\"selectedDay.length !== 0\" class=\"row\">\r\n            <div v-if=\"!roomSelected\" class=\"col-6\">\r\n              Занятые\r\n            </div>\r\n            <div v-if=\"!roomSelected\" class=\"col-6\">\r\n              Свободные\r\n              <div class=\"row window camera col-12\" @click=\"chooseRoom(room)\" v-for=\"(room, index) in getRooms\"\r\n                   :key=\"index\">\r\n                <span class=\"name\">{{room.name}}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" v-if=\"roomSelected\">\r\n            <div class=\"col-5\">\r\n              Расписание\r\n              <div class=\"window\">\r\n                <table\r\n                    class=\"linear-table window-table\"\r\n                    style=\"width: 100%\"\r\n                    @mousedown=\"onMousedown=true\">\r\n                  <tr\r\n                      v-for=\"(time, index) in timesArray\"\r\n                      :key=\"index\"\r\n                      onmousedown=\"return false\"\r\n                      onselect=\"return false\">\r\n                    <template v-if=\"2 * index < 49\">\r\n                      <td\r\n                          :id=\"timesArray[2 * index]\"\r\n                          class=\"linear-table-td\"\r\n                          @mouseenter = \"setIndices(2 * index)\"\r\n                          @mousedown = \"indexSelected = 2 * index; onMousedown = true; setIndices(2 * index)\">\r\n                        {{timesArray[2 * index]}}\r\n                      </td>\r\n                      <td\r\n                          :id=\"timesArray[2 * index + 1]\"\r\n                          class=\"linear-table-td\"\r\n                          @mouseenter=\"setIndices(2 * index + 1)\"\r\n                          @mousedown = \"indexSelected = 2 * index + 1; onMousedown = true; setIndices(2 * index + 1)\">\r\n                        {{timesArray[2 * index + 1]}}\r\n                      </td>\r\n                    </template>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-7\">\r\n              <div class=\"grid-default\">\r\n                Мероприятие\r\n                <button class=\"hidden-button content content-end\" @click=\"resetTask\">\r\n                  <img src=\"../assets/icons/add24.png\" alt=\"\">\r\n                </button>\r\n              </div>\r\n              <form @submit.prevent=\"selectFunction(save)\" style=\"margin-top: 10px\">\r\n                <div class=\"\">\r\n                  <label> Название: </label>\r\n                  <input class=\" input-field\" type=\"text\" v-model.trim=\"task.name\"\r\n                         :class=\"v$.task.name.$error ? 'is-invalid' : ''\">\r\n                  <p v-if=\"v$.task.name.$dirty && v$.task.name.required.$invalid \" class=\"invalid-feedback\">\r\n                    Обязательное поле\r\n                  </p>\r\n                </div>\r\n                <div class=\"\">\r\n                  <label> Количество участников: </label>\r\n                  <input class=\"input-field\" type=\"text\" v-model.trim=\"task.targetCount\"\r\n                         :class=\"v$.task.targetCount.$error ? 'is-invalid' : ''\">\r\n                  <p v-if=\"v$.task.targetCount.$dirty && v$.task.targetCount.required.$invalid \" class=\"invalid-feedback\">\r\n                    Обязательное поле\r\n                  </p>\r\n                  <p v-if=\"v$.task.targetCount.$dirty && v$.task.targetCount.integer.$invalid \" class=\"invalid-feedback\">\r\n                    Значение должно быть числовым\r\n                  </p>\r\n                </div>\r\n                <div class=\"\">\r\n                  <label> Комментарий: </label>\r\n                  <input class=\"input-field\" type=\"text\" v-model.trim=\"task.comment\">\r\n                </div>\r\n                <div style=\"width: 100%; margin-bottom: 10px\">\r\n                  <button type=\"submit\" class=\"btn btn-success\" >Сохранить</button>\r\n                </div>\r\n              </form>\r\n              <button\r\n                  v-if=\"taskSelected\"\r\n                  @click=\"clearTimesArray(this.task.timesArray); canChangeTimesArray = true\"\r\n                  class=\"btn btn-primary\"\r\n                  style=\"position: absolute; top: 0; right: 0; margin-right: 15px; margin-top: 132px\">\r\n                Выбрать время\r\n              </button>\r\n              Список мероприятий\r\n                <div class=\"row\" v-for=\"(task, index) in this.getTasks\" :key=\"index\">\r\n                  <div class=\"window camera col-6\" @click=\"chooseTask(task)\">\r\n                    <span class=\"name\">{{task.name}}</span>\r\n                    <span class=\"name\" style=\"margin-left: 10px\">0/{{task.targetCount}}</span>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <input class=\"hidden-button\"\r\n                           type=\"color\"\r\n                           @change=\"repaintTimesArray(task.timesArray, task.color + alphaChannel); save(task)\"\r\n                           v-model.trim=\"task.color\">\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <button class=\"hidden-button\"\r\n                            @click=\"removeTask(task.id); resetTask(); clearTimesArray(task.timesArray)\">\r\n                      <img src=\"../assets/icons/delete.png\" alt=\"\">\r\n                    </button>\r\n                  </div>\r\n<!--                  <div class=\"col-2\">-->\r\n<!--                    <button-->\r\n<!--                        title=\"Установить время\"-->\r\n<!--                        class=\"hidden-button\"-->\r\n<!--                        @click=\"clearTimesArray(task.timesArray)\">-->\r\n<!--                      <img src=\"../assets/icons/time.png\" alt=\"\">-->\r\n<!--                    </button>-->\r\n<!--                  </div>-->\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from \"vuex\"\r\nimport {mapActions} from 'vuex'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport {integer, required} from \"@vuelidate/validators\";\r\n\r\nexport default {\r\n  name: \"CalendarPage\",\r\n  setup () {\r\n    return {\r\n      v$: useVuelidate()\r\n    }\r\n  },\r\n  data() {\r\n    return{\r\n      task: {\r\n        id: null,\r\n        name: '',\r\n        comment: '',\r\n        roomId: null,\r\n        targetCount: null,\r\n        begin: '',\r\n        end: '',\r\n        color: this.randomHex().slice(0,7),\r\n        timesArray: ''\r\n      },\r\n      // generatedColor: this.randomHex(),\r\n\r\n      indexStart: null,\r\n      indexEnd: null,\r\n      indexSelected: null,\r\n      onMousedown: false,\r\n      timesArray: [],\r\n      busyTimesArray: [],\r\n\r\n      roomSelected: false,\r\n      taskSelected: false,\r\n      roomSelectedId: null,\r\n\r\n      canChangeTimesArray: true,\r\n\r\n      prevCalendarIndex: null,\r\n      selectedDay: '',\r\n      daysCount: 32,\r\n      alphaChannel: '',\r\n      currentMonth: new Date().getMonth(),\r\n      currentYear: new Date().getFullYear(),\r\n      calendarMonths30: [3, 5, 8, 10],\r\n      calendarMonths31: [0, 2, 4, 6, 7, 9, 11],\r\n      calendarMonths: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n        'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n      calendarDays: ['ПН','ВТ','СР','ЧТ','ПТ','СБ','ВС'],\r\n      days: null,\r\n      missedDays: null\r\n    }\r\n  },\r\n  validations: {\r\n    task: {\r\n      name: {required},\r\n      targetCount: {required, integer},\r\n      timesArray: {required},\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n        'getRooms',\r\n        'getTasks',\r\n        'getTaskByID',\r\n        'getRefreshInterval'\r\n    ])\r\n  },\r\n  mounted() {\r\n    if (this.getRefreshInterval){\r\n      console.log('clean')\r\n      this.$store.commit('clearRefreshInterval')\r\n    }\r\n    this.setCorrectMonth().then((value => {\r\n          console.log(value)\r\n          let date = new Date()\r\n          if (this.currentMonth === date.getMonth() && this.currentYear === date.getFullYear())\r\n            console.log('1')\r\n          try {\r\n            document.getElementById((date.getDate() - 1).toString()).classList.add('calendar-number-current')\r\n          }\r\n          catch (err){\r\n            console.log(err)\r\n          }\r\n        })\r\n    )\r\n    this.selectFunction(this.getRoomsFromDB)\r\n    this.createTimesArray()\r\n  },\r\n  methods: {\r\n    save(saveTask){\r\n      let task = this.task\r\n      if (arguments.length === 1) task = saveTask\r\n      else this.v$.task.$touch()\r\n      let returnResult\r\n      console.log('save')\r\n      if (new Date(this.selectedDay + ' ' + this.indexStart + ':00') < new Date()) alert(\"\")\r\n      else if(this.task.timesArray.length >= 2){\r\n        if (!this.v$.task.$error) {\r\n          fetch('http://localhost:5000/setTask', {\r\n            credentials: \"include\",\r\n            method: 'POST',\r\n            cors: 'no-cors',\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=utf-8',\r\n            },\r\n            body: JSON.stringify({\r\n              \"id\": task.id,\r\n              \"name\": task.name,\r\n              \"comment\": task.comment,\r\n              \"roomId\": this.roomSelectedId,\r\n              \"targetCount\": task.targetCount,\r\n              \"begin\": `${this.selectedDay} ${task.timesArray[0]}:00`,\r\n              \"end\": `${this.selectedDay} ${task.timesArray[task.timesArray.length-1]}:00`,\r\n              \"color\": task.color\r\n            })\r\n          })\r\n              .then(response => response.json())\r\n              .then((response) => {\r\n                console.log(response)\r\n                returnResult = response\r\n                this.task.id = response.id\r\n                if (this.getTaskByID(this.task.id) === undefined)\r\n                  this.$store.commit('setTask', Object.assign({}, this.task))\r\n                this.repaintTimesArray(task.timesArray, task.color + this.alphaChannel).then((value => {\r\n                      console.log(value)\r\n                      this.resetTask()\r\n                    })\r\n                )\r\n                // this.resetTask().then((value) =>{\r\n                //       console.log(value)\r\n                //       this.paintTimesArray(task.timesArray)\r\n                //     }\r\n                // )\r\n              });\r\n        }\r\n      }\r\n      else alert(\"Выберите диапазон времени более одного значения\")\r\n      return returnResult\r\n    },\r\n    getRoomsFromDB() {\r\n      let returnResult\r\n      fetch('http://localhost:5000/getRooms', {\r\n        credentials: \"include\",\r\n        method: 'GET',\r\n        cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            returnResult = response\r\n            console.log('resp ' + response)\r\n            this.$store.state.rooms = response\r\n          });\r\n      // console.log(returnResult)\r\n      return returnResult\r\n    },\r\n    getTasksFromDB(){\r\n      let returnResult\r\n      fetch('http://localhost:5000/getTasks', {\r\n        credentials: \"include\",\r\n        method: 'POST',\r\n        // cors: 'no-cors',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({\r\n          \"date\": this.selectedDay\r\n        })\r\n      })\r\n          .then(response => response.json())\r\n          .then((response) => {\r\n            returnResult = response\r\n            console.log(this.selectedDay)\r\n            console.log(response)\r\n            this.$store.state.tasks = response\r\n            console.log(this.randomHex())\r\n            for (let task of this.getTasks){\r\n              let indexStart = this.getTimeIndex(task.begin)\r\n              let indexEnd = this.getTimeIndex(task.end)\r\n              task.timesArray = this.$data.timesArray.slice(indexStart, indexEnd+1)\r\n              // console.log('sliceArray ' + indexStart, indexEnd)\r\n              // let color = this.randomHex()\r\n              // task.color = color.slice(0, 7)\r\n              this.paintTimesArray(task.timesArray, task.color + this.alphaChannel)\r\n              for (let time of task.timesArray){\r\n                this.busyTimesArray.push(time)\r\n              }\r\n            }\r\n          });\r\n      return returnResult\r\n    },\r\n    chooseTask(task) {\r\n      console.log('choose')\r\n      // this.resetTask()\r\n      this.canChangeTimesArray = false\r\n      this.task = task\r\n      this.taskSelected = true\r\n      this.paintTimesArray(this.task.timesArray, this.task.color + this.alphaChannel)\r\n    },\r\n    async resetTask() {\r\n      let taskCopy = Object.assign({}, this.task)\r\n      this.task = taskCopy\r\n      this.task.id = null\r\n      this.task.name = ''\r\n      this.task.comment = ''\r\n      this.task.roomId = this.roomSelectedId\r\n      this.task.targetCount = null\r\n      this.task.begin = ''\r\n      this.task.end = ''\r\n      this.task.color = this.randomHex().slice(0,7)\r\n      this.task.timesArray = ''\r\n      this.taskSelected = false\r\n      this.v$.task.$reset()\r\n      this.indexEnd = ''\r\n      this.indexStart = ''\r\n      this.canChangeTimesArray = true\r\n      this.paintTimesArray(this.task.timesArray, '#ffffff66')\r\n      return 0\r\n    },\r\n    getTimeIndex(time){\r\n      let getTime = new Date(time)\r\n      let date = `${getTime.getHours().toString().length === 1 ? \"0\" : \"\"}${getTime.getHours()}:${getTime.getMinutes().toString().length === 1 ? \"0\" : \"\"}${getTime.getMinutes()}`\r\n      // console.log('date ' + date)\r\n      return this.timesArray.indexOf(date)\r\n    },\r\n    randomHex(){\r\n      this.alphaChannel = Math.round(0.4 * 255).toString(16)\r\n      let color = Math.floor(Math.random()*16777215).toString(16)\r\n      color = color.length === 6 ? color : color + \"0\"\r\n      console.log('a: ' + this.alphaChannel + \" \" + color)\r\n      return `#${color}${this.alphaChannel}`\r\n    },\r\n    setIndices(index){\r\n      if (this.canChangeTimesArray === false) return 1\r\n      let indexStart = null\r\n      let indexEnd = null\r\n      if (index < this.indexSelected) {\r\n        indexEnd = this.$data.indexSelected\r\n        indexStart = index\r\n      }\r\n      else {\r\n        indexStart = this.indexSelected\r\n        indexEnd = index\r\n      }\r\n      let sliceArray = this.$data.timesArray.slice(indexStart, indexEnd+1)\r\n      let includesBusyTime = false\r\n      for (let time of sliceArray) {\r\n        if (this.busyTimesArray.includes(time)) includesBusyTime = true\r\n      }\r\n      if (this.onMousedown === true && !includesBusyTime) this.paintTimesArray(sliceArray)\r\n    },\r\n    async repaintTimesArray(timesArray, color){\r\n      this.clearTimesArray(timesArray)\r\n      this.paintTimesArray(timesArray, color).then((value => {\r\n        console.log(value)\r\n            this.setBusyTimeArray(timesArray).then((value => {\r\n                  console.log(value)\r\n                  this.task.timesArray = []\r\n                })\r\n            )\r\n      })\r\n      )\r\n      return 'repaintTimesArray'\r\n    },\r\n    async paintTimesArray(sliceArray, selectedColor){\r\n      console.log('newPaint')\r\n      let color = this.task.color + this.alphaChannel\r\n      // console.log(color)\r\n      if (arguments.length === 2) color = selectedColor\r\n      else this.task.color = color.slice(0,7)\r\n      for (let i of this.timesArray){\r\n        if (!this.busyTimesArray.includes(i)){\r\n          if (sliceArray.includes(i)){\r\n            // console.log('include ' + i)\r\n            document.getElementById(i).style.setProperty('--color', color)\r\n            document.getElementById(i).classList.add('linear-table-td-painted')\r\n            // document.getElementById(i).classList.add(`task-${}`)\r\n          }\r\n          else {\r\n            document.getElementById(i).classList.remove('linear-table-td-painted')\r\n          }\r\n          this.indexStart = sliceArray[0]\r\n          this.indexEnd = sliceArray[sliceArray.length-1]\r\n\r\n          this.task.timesArray = sliceArray\r\n        }\r\n      }\r\n      return 'paintTimesArray'\r\n    },\r\n    clearTimesArray(timesArray){\r\n      for (let i of timesArray){\r\n        if (this.busyTimesArray.includes(i))\r\n          this.busyTimesArray = this.busyTimesArray.filter((time) => time !== i)\r\n        document.getElementById(i).classList.remove('linear-table-td-painted')\r\n      }\r\n    },\r\n    async setBusyTimeArray(timesArray){\r\n      for (let time of timesArray){\r\n        this.busyTimesArray.push(time)\r\n      }\r\n      return 'setBusyTimeArray'\r\n    },\r\n    chooseMonth(value){\r\n      if (value === 'back'){\r\n        if (this.currentMonth === 0) {\r\n          this.currentMonth = 11\r\n          this.currentYear -=1\r\n        }\r\n        else this.currentMonth -=1\r\n      }\r\n      else if (value === 'next'){\r\n        if (this.currentMonth === 11) {\r\n          this.currentMonth = 0\r\n          this.currentYear +=1\r\n        }\r\n        else this.currentMonth +=1\r\n      }\r\n      this.setCorrectMonth()\r\n\r\n      // document.getElementById((parseInt(day) - 1).toString()).classList.add('calendar-number-selected')\r\n    },\r\n    chooseDay(day, index){\r\n      let monthStr = this.currentMonth + 1\r\n      if (day.toString().length !== 2) day = `0${day}`\r\n      if (monthStr.toString().length !== 2) monthStr = `0${monthStr}`\r\n      this.selectedDay = `${monthStr}/${day}/${this.currentYear}`\r\n\r\n      console.log(index + ' ' + this.prevCalendarIndex)\r\n      document.getElementById(index).classList.add('calendar-number-selected')\r\n      if (this.prevCalendarIndex !== null && this.prevCalendarIndex !== index)\r\n        if (document.getElementById(this.prevCalendarIndex).classList.length !== 0){\r\n          console.log('remove')\r\n          document.getElementById(this.prevCalendarIndex).classList.remove('calendar-number-selected')\r\n        }\r\n\r\n      this.prevCalendarIndex = index\r\n\r\n      if (this.roomSelected){\r\n        this.resetTask()\r\n        this.busyTimesArray = []\r\n        for (let i of this.timesArray) document.getElementById(i).classList.remove('linear-table-td-painted')\r\n        this.selectFunction(this.getTasksFromDB)\r\n      }\r\n    },\r\n    chooseRoom(room){\r\n      this.roomSelected = true\r\n      this.roomSelectedId = room.id\r\n      console.log(this.selectedDay)\r\n      console.log(room)\r\n      this.selectFunction(this.getTasksFromDB)\r\n    },\r\n    getCurrentDay(){\r\n      let curDay = new Date()\r\n      this.currentMonth = curDay.getMonth()\r\n      this.currentYear = curDay.getFullYear()\r\n      this.setCorrectMonth()\r\n    },\r\n    async setCorrectMonth(){\r\n      let curDay = new Date()\r\n      curDay.get\r\n      curDay.setDate(1)\r\n      curDay.setMonth(this.currentMonth)\r\n      curDay.setFullYear(this.currentYear)\r\n      let day = curDay.getDay()\r\n      if (day === 0) this.missedDays = [...Array(6)]\r\n      else  this.missedDays = [...Array(day-1)]\r\n\r\n      if (this.calendarMonths30.includes(this.currentMonth)) this.daysCount = 31\r\n      else if (this.calendarMonths31.includes(this.currentMonth)) this.daysCount = 32\r\n      else if (this.currentYear%4 === 0) this.daysCount = 30\r\n      else this.daysCount = 29\r\n      this.days = [...Array(this.daysCount).keys()].slice(1)\r\n\r\n      return 'setCorrectMonth'\r\n    },\r\n    createTimesArray(){\r\n      for (let i = 0; i < 25; i++){\r\n        let setTime = \"\"\r\n        // let hourArray = []\r\n        if (i.toString().length !== 2) setTime = \"0\"\r\n        this.timesArray.push(`${setTime}${i}:00`)\r\n        this.timesArray.push(`${setTime}${i}:30`)\r\n        // this.timesArray.push(hourArray)\r\n      }\r\n      this.timesArray.pop()\r\n      // console.log(this.timesArray)\r\n    },\r\n    selectFunction(func){\r\n      let respFunc = func()\r\n      let refresh\r\n      console.log('respFunc ' + respFunc)\r\n      if (respFunc === \"Bad token\") {\r\n        refresh = this.refreshToken()\r\n        if (refresh === \"ok\"){\r\n          console.log('refreshOk')\r\n          respFunc = func()\r\n        }\r\n        if (respFunc === \"Bad token\") alert('logout pls')\r\n      }\r\n      else return \"ok\"\r\n    },\r\n    ...mapActions([\r\n        'removeTask',\r\n        'refreshToken'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.field {\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n}\r\n.window{\r\n  box-shadow: 0 3px 4px rgba(0,0,0,.25);\r\n  border-radius: 10px ;\r\n  &-table{\r\n    border-radius: 5px ;\r\n  }\r\n  &-onPage{\r\n    height: 550px;\r\n  }\r\n}\r\n.calendar {\r\n  height: 400px;\r\n  margin-top: 10px;\r\n  //margin-top: 10px;\r\n  //position: relative;\r\n  //width: 400px;\r\n  background-color: #fff;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n.calendar-month{\r\n  padding: 10px 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.grid-default{\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n.calendar-month-el{\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: 1fr 1fr 90px 50px 1fr;\r\n  font-size: 19px;\r\n  font-weight: 500;\r\n}\r\n.calendar-date {\r\n  padding: 0 20px 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-gap: 10px;\r\n  box-sizing: border-box;\r\n}\r\n.calendar-day {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 25px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #262626;\r\n  &:nth-child(7n){\r\n    color: #ff685d;\r\n  }\r\n}\r\n.calendar-number {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: #262626;\r\n  border-radius: 5px;\r\n  &-selected{\r\n    font-weight: 700;\r\n    background-color: #29239f;\r\n    color: aliceblue;\r\n  }\r\n  &:hover{\r\n    //background-color: #dadada;\r\n    border: 2px solid #23b24e;\r\n    cursor: pointer;\r\n  }\r\n  &:nth-child(7n){\r\n    color: #ff685d;\r\n  }\r\n  &-current{\r\n    color: #262626;\r\n    font-weight: 700;\r\n    //background-color: #23b24e;\r\n  }\r\n}\r\n.hidden-button{\r\n  background: inherit;\r\n  border: none;\r\n  //display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.content{\r\n  display: flex;\r\n  align-items: center;\r\n  &-center{\r\n    justify-content: center;\r\n  }\r\n  &-end{\r\n    justify-content: end;\r\n  }\r\n  &-start{\r\n    justify-content: start;\r\n  }\r\n}\r\n.name{\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin: 7px;\r\n}\r\n.camera:hover{\r\n  background-color: #dadada;\r\n  cursor: pointer;\r\n}\r\n.linear-table{\r\n  background: linear-gradient(rgba(223, 224, 255, 0.5) 50%, #ffffff 50%);\r\n  background-size: 100% 37px;\r\n  &-td{\r\n    font-size: 11px;\r\n    &:hover{\r\n      cursor: pointer;\r\n    }\r\n    &-painted {\r\n      background-color: var(--color) ;\r\n    //rgba(255, 230, 0, 0.25)\r\n    }\r\n  }\r\n}\r\n.scroll-table{\r\n  height: 480px;\r\n  overflow-x: auto;\r\n  margin-top: 5px;\r\n}\r\n.input-field{\r\n  outline: none;\r\n  width: 100px;\r\n  height: 25px;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-right: 15px;\r\n  border-radius: 5px ;\r\n  border: 1px solid grey;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}